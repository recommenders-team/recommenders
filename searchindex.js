Search.setIndex({"alltitles": {"": [[2, null]], "A2SVD": [[3, "module-recommenders.models.deeprec.models.sequential.asvd"]], "Amazon Reviews": [[0, "amazon-reviews"]], "Base model": [[3, "module-recommenders.models.deeprec.models.base_model"], [3, "id1"]], "CORD-19": [[0, "cord-19"]], "Caser": [[3, "module-recommenders.models.deeprec.models.sequential.caser"]], "Common utilities module": [[5, null]], "Cornac utilities": [[3, "module-recommenders.models.cornac.cornac_utils"]], "Criteo": [[0, "criteo"]], "DKN": [[3, "module-recommenders.models.deeprec.models.dkn"]], "DKN item-to-item": [[3, "module-recommenders.models.deeprec.models.dkn_item2item"]], "Data processing utilities": [[3, "module-recommenders.models.deeprec.DataModel.ImplicitCF"]], "Dataset module": [[0, null]], "DeepRec utilities": [[3, "deeprec-utilities"]], "Download utilities": [[0, "module-recommenders.datasets.download_utils"]], "Evaluation module": [[1, null]], "FastAI utilities": [[3, "module-recommenders.models.fastai.fastai_utils"]], "GPU utilities": [[5, "module-recommenders.utils.gpu_utils"]], "GRU": [[3, "gru"]], "General utilities": [[5, "module-recommenders.utils.general_utils"]], "Hyperparameter tuning module": [[4, null]], "Iterators": [[3, "module-recommenders.models.deeprec.io.iterator"], [3, "id2"]], "Knowledge graph utilities": [[0, "module-recommenders.datasets.wikidata"]], "Kubernetes utilities": [[5, "module-recommenders.utils.k8s_utils"]], "LSTUR": [[3, "module-recommenders.models.newsrec.models.lstur"]], "LightFM utilities": [[3, "module-recommenders.models.lightfm.lightfm_utils"]], "LightGBM utilities": [[3, "module-recommenders.models.lightgbm.lightgbm_utils"]], "LightGCN": [[3, "module-recommenders.models.deeprec.models.graphrec.lightgcn"]], "MIND": [[0, "mind"]], "MovieLens": [[0, "movielens"]], "Multinomial VAE": [[3, "module-recommenders.models.vae.multinomial_vae"]], "NAML": [[3, "module-recommenders.models.newsrec.models.naml"]], "NCF": [[3, "module-recommenders.models.ncf.dataset"]], "NPA": [[3, "module-recommenders.models.newsrec.models.npa"]], "NRMS": [[3, "module-recommenders.models.newsrec.models.nrms"]], "NewsRec utilities": [[3, "newsrec-utilities"]], "NextItNet": [[3, "module-recommenders.models.deeprec.models.sequential.nextitnet"]], "Notebook utilities": [[5, "module-recommenders.utils.notebook_utils"]], "Other splitters utilities": [[0, "module-recommenders.datasets.split_utils"]], "Pandas dataframe utilities": [[0, "module-recommenders.datasets.pandas_df_utils"]], "Parameter sweep utils": [[4, "module-recommenders.tuning.parameter_sweep"]], "Plot utilities": [[5, "module-recommenders.utils.plot"]], "PySpark evaluation": [[1, "module-recommenders.evaluation.spark_evaluation"]], "PySpark splitters": [[0, "module-recommenders.datasets.spark_splitters"]], "Python evaluation": [[1, "module-recommenders.evaluation.python_evaluation"]], "Python splitters": [[0, "module-recommenders.datasets.python_splitters"]], "Python utilities": [[5, "module-recommenders.utils.python_utils"]], "RBM": [[3, "module-recommenders.models.rbm.rbm"]], "RNN Cells": [[3, "module-recommenders.models.deeprec.models.sequential.rnn_cell_implement"]], "Recommendation datasets": [[0, "recommendation-datasets"]], "Recommender algorithms module": [[3, null]], "SAR": [[3, "module-recommenders.models.sar.sar_singlenode"]], "SASRec": [[3, "module-recommenders.models.sasrec.model"]], "SLIRec": [[3, "module-recommenders.models.deeprec.models.sequential.sli_rec"]], "SSE-PT": [[3, "module-recommenders.models.sasrec.ssept"]], "SUM": [[3, "sum"]], "Sequential base model": [[3, "module-recommenders.models.deeprec.models.sequential.sequential_base_model"]], "Spark utilities": [[5, "module-recommenders.utils.spark_utils"]], "Sparse utilities": [[0, "module-recommenders.datasets.sparse"]], "Splitter utilities": [[0, "splitter-utilities"]], "Standard VAE": [[3, "module-recommenders.models.vae.standard_vae"]], "Surprise utilities": [[3, "module-recommenders.models.surprise.surprise_utils"]], "TF-IDF utilities": [[3, "module-recommenders.models.tfidf.tfidf_utils"]], "Tensorflow utilities": [[5, "module-recommenders.utils.tf_utils"]], "Timer": [[5, "module-recommenders.utils.timer"]], "Utilities": [[3, "module-recommenders.models.deeprec.deeprec_utils"], [3, "id3"]], "Vowpal Wabbit utilities": [[3, "module-recommenders.models.vowpal_wabbit.vw"]], "Welcome to Recommenders": [[2, null]], "Wide & Deep": [[3, "module-recommenders.models.wide_deep.wide_deep_utils"]], "xDeepFM": [[3, "module-recommenders.models.deeprec.models.xDeepFM"]]}, "docnames": ["datasets", "evaluation", "intro", "models", "tuning", "utils"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["datasets.rst", "evaluation.rst", "intro.md", "models.rst", "tuning.rst", "utils.rst"], "indexentries": {"__init__() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.__init__", false]], "__init__() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.__init__", false]], "__init__() (recommenders.evaluation.spark_evaluation.sparkratingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation.__init__", false]], "__init__() (recommenders.models.deeprec.datamodel.implicitcf.implicitcf method)": [[3, "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF.__init__", false]], "__init__() (recommenders.models.deeprec.deeprec_utils.hparams method)": [[3, "recommenders.models.deeprec.deeprec_utils.HParams.__init__", false]], "__init__() (recommenders.models.deeprec.io.dkn_item2item_iterator.dknitem2itemtextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_item2item_iterator.DKNItem2itemTextIterator.__init__", false]], "__init__() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.__init__", false]], "__init__() (recommenders.models.deeprec.io.iterator.ffmtextiterator method)": [[3, "recommenders.models.deeprec.io.iterator.FFMTextIterator.__init__", false]], "__init__() (recommenders.models.deeprec.io.nextitnet_iterator.nextitnetiterator method)": [[3, "recommenders.models.deeprec.io.nextitnet_iterator.NextItNetIterator.__init__", false]], "__init__() (recommenders.models.deeprec.io.sequential_iterator.sequentialiterator method)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator.__init__", false]], "__init__() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.__init__", false]], "__init__() (recommenders.models.deeprec.models.dkn.dkn method)": [[3, "recommenders.models.deeprec.models.dkn.DKN.__init__", false]], "__init__() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.__init__", false]], "__init__() (recommenders.models.deeprec.models.sequential.caser.casermodel method)": [[3, "recommenders.models.deeprec.models.sequential.caser.CaserModel.__init__", false]], "__init__() (recommenders.models.deeprec.models.sequential.sequential_base_model.sequentialbasemodel method)": [[3, "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel.__init__", false]], "__init__() (recommenders.models.ncf.dataset.datafile method)": [[3, "recommenders.models.ncf.dataset.DataFile.__init__", false]], "__init__() (recommenders.models.ncf.dataset.dataset method)": [[3, "recommenders.models.ncf.dataset.Dataset.__init__", false]], "__init__() (recommenders.models.ncf.dataset.negativesampler method)": [[3, "recommenders.models.ncf.dataset.NegativeSampler.__init__", false]], "__init__() (recommenders.models.ncf.ncf_singlenode.ncf method)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF.__init__", false]], "__init__() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.__init__", false]], "__init__() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.__init__", false]], "__init__() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.__init__", false]], "__init__() (recommenders.models.newsrec.models.layers.attlayer2 method)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.__init__", false]], "__init__() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.__init__", false]], "__init__() (recommenders.models.newsrec.models.lstur.lsturmodel method)": [[3, "recommenders.models.newsrec.models.lstur.LSTURModel.__init__", false]], "__init__() (recommenders.models.newsrec.models.naml.namlmodel method)": [[3, "recommenders.models.newsrec.models.naml.NAMLModel.__init__", false]], "__init__() (recommenders.models.newsrec.models.npa.npamodel method)": [[3, "recommenders.models.newsrec.models.npa.NPAModel.__init__", false]], "__init__() (recommenders.models.newsrec.models.nrms.nrmsmodel method)": [[3, "recommenders.models.newsrec.models.nrms.NRMSModel.__init__", false]], "__init__() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.__init__", false]], "__init__() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.__init__", false]], "__init__() (recommenders.models.sasrec.model.encoder method)": [[3, "recommenders.models.sasrec.model.Encoder.__init__", false]], "__init__() (recommenders.models.sasrec.model.encoderlayer method)": [[3, "recommenders.models.sasrec.model.EncoderLayer.__init__", false]], "__init__() (recommenders.models.sasrec.model.layernormalization method)": [[3, "recommenders.models.sasrec.model.LayerNormalization.__init__", false]], "__init__() (recommenders.models.sasrec.model.multiheadattention method)": [[3, "recommenders.models.sasrec.model.MultiHeadAttention.__init__", false]], "__init__() (recommenders.models.sasrec.model.pointwisefeedforward method)": [[3, "recommenders.models.sasrec.model.PointWiseFeedForward.__init__", false]], "__init__() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.__init__", false]], "__init__() (recommenders.models.sasrec.sampler.warpsampler method)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.__init__", false]], "__init__() (recommenders.models.sasrec.ssept.ssept method)": [[3, "recommenders.models.sasrec.ssept.SSEPT.__init__", false]], "__init__() (recommenders.models.vae.multinomial_vae.annealingcallback method)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback.__init__", false]], "__init__() (recommenders.models.vae.multinomial_vae.metrics method)": [[3, "recommenders.models.vae.multinomial_vae.Metrics.__init__", false]], "__init__() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.__init__", false]], "__init__() (recommenders.models.vae.standard_vae.annealingcallback method)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback.__init__", false]], "__init__() (recommenders.models.vae.standard_vae.metrics method)": [[3, "recommenders.models.vae.standard_vae.Metrics.__init__", false]], "__init__() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.__init__", false]], "__init__() (recommenders.utils.tf_utils.metricslogger method)": [[5, "recommenders.utils.tf_utils.MetricsLogger.__init__", false]], "__init__() (recommenders.utils.timer.timer method)": [[5, "recommenders.utils.timer.Timer.__init__", false]], "__repr__() (recommenders.models.deeprec.deeprec_utils.hparams method)": [[3, "recommenders.models.deeprec.deeprec_utils.HParams.__repr__", false]], "a2svdmodel (class in recommenders.models.deeprec.models.sequential.asvd)": [[3, "recommenders.models.deeprec.models.sequential.asvd.A2SVDModel", false]], "affinitymatrix (class in recommenders.datasets.sparse)": [[0, "recommenders.datasets.sparse.AffinityMatrix", false]], "annealingcallback (class in recommenders.models.vae.multinomial_vae)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback", false]], "annealingcallback (class in recommenders.models.vae.standard_vae)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback", false]], "attlayer2 (class in recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2", false]], "auc() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.auc", false]], "baseiterator (class in recommenders.models.deeprec.io.iterator)": [[3, "recommenders.models.deeprec.io.iterator.BaseIterator", false]], "basemodel (class in recommenders.models.deeprec.models.base_model)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel", false]], "basemodel (class in recommenders.models.newsrec.models.base_model)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel", false]], "batch_size (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.batch_size", false]], "batch_size (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.batch_size", false]], "batch_size (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.batch_size", false]], "batch_training() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.batch_training", false]], "binarize() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.binarize", false]], "binomial_sampling() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.binomial_sampling", false]], "body_size (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.body_size", false]], "build() (recommenders.models.newsrec.models.layers.attlayer2 method)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.build", false]], "build() (recommenders.models.newsrec.models.layers.overwritemasking method)": [[3, "recommenders.models.newsrec.models.layers.OverwriteMasking.build", false]], "build() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.build", false]], "build_feature_columns() (in module recommenders.models.wide_deep.wide_deep_utils)": [[3, "recommenders.models.wide_deep.wide_deep_utils.build_feature_columns", false]], "build_model() (in module recommenders.models.wide_deep.wide_deep_utils)": [[3, "recommenders.models.wide_deep.wide_deep_utils.build_model", false]], "build_optimizer() (in module recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.build_optimizer", false]], "cal_metric() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.cal_metric", false]], "call() (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4alstmcell method)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4ALSTMCell.call", false]], "call() (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4lstmcell method)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4LSTMCell.call", false]], "call() (recommenders.models.newsrec.models.layers.attlayer2 method)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.call", false]], "call() (recommenders.models.newsrec.models.layers.computemasking method)": [[3, "recommenders.models.newsrec.models.layers.ComputeMasking.call", false]], "call() (recommenders.models.newsrec.models.layers.overwritemasking method)": [[3, "recommenders.models.newsrec.models.layers.OverwriteMasking.call", false]], "call() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.call", false]], "call() (recommenders.models.sasrec.model.encoder method)": [[3, "recommenders.models.sasrec.model.Encoder.call", false]], "call() (recommenders.models.sasrec.model.encoderlayer method)": [[3, "recommenders.models.sasrec.model.EncoderLayer.call", false]], "call() (recommenders.models.sasrec.model.layernormalization method)": [[3, "recommenders.models.sasrec.model.LayerNormalization.call", false]], "call() (recommenders.models.sasrec.model.multiheadattention method)": [[3, "recommenders.models.sasrec.model.MultiHeadAttention.call", false]], "call() (recommenders.models.sasrec.model.pointwisefeedforward method)": [[3, "recommenders.models.sasrec.model.PointWiseFeedForward.call", false]], "call() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.call", false]], "call() (recommenders.models.sasrec.ssept.ssept method)": [[3, "recommenders.models.sasrec.ssept.SSEPT.call", false]], "call_() (recommenders.models.sasrec.model.encoderlayer method)": [[3, "recommenders.models.sasrec.model.EncoderLayer.call_", false]], "cartesian_product() (in module recommenders.models.fastai.fastai_utils)": [[3, "recommenders.models.fastai.fastai_utils.cartesian_product", false]], "casermodel (class in recommenders.models.deeprec.models.sequential.caser)": [[3, "recommenders.models.deeprec.models.sequential.caser.CaserModel", false]], "catalog_coverage() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.catalog_coverage", false]], "catalog_coverage() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.catalog_coverage", false]], "check_nn_config() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.check_nn_config", false]], "check_nn_config() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.check_nn_config", false]], "check_type() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.check_type", false]], "check_type() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.check_type", false]], "clean_dataframe() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.clean_dataframe", false]], "clean_dataframe() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.clean_dataframe", false]], "clear_memory_all_gpus() (in module recommenders.utils.gpu_utils)": [[5, "recommenders.utils.gpu_utils.clear_memory_all_gpus", false]], "col_sep (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.col_sep", false]], "col_spliter (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.col_spliter", false]], "col_spliter (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.col_spliter", false]], "columnmismatcherror": [[1, "recommenders.evaluation.python_evaluation.ColumnMismatchError", false]], "columntypemismatcherror": [[1, "recommenders.evaluation.python_evaluation.ColumnTypeMismatchError", false]], "compare_metric() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.compare_metric", false]], "compute_affinity_matrix() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.compute_affinity_matrix", false]], "compute_cooccurrence_matrix() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.compute_cooccurrence_matrix", false]], "compute_mask() (recommenders.models.newsrec.models.layers.attlayer2 method)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.compute_mask", false]], "compute_output_shape() (recommenders.models.newsrec.models.layers.attlayer2 method)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.compute_output_shape", false]], "compute_output_shape() (recommenders.models.newsrec.models.layers.computemasking method)": [[3, "recommenders.models.newsrec.models.layers.ComputeMasking.compute_output_shape", false]], "compute_output_shape() (recommenders.models.newsrec.models.layers.overwritemasking method)": [[3, "recommenders.models.newsrec.models.layers.OverwriteMasking.compute_output_shape", false]], "compute_output_shape() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.compute_output_shape", false]], "compute_ranking_predictions() (in module recommenders.models.surprise.surprise_utils)": [[3, "recommenders.models.surprise.surprise_utils.compute_ranking_predictions", false]], "compute_time_decay() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.compute_time_decay", false]], "computemasking (class in recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.ComputeMasking", false]], "cosine_similarity() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.cosine_similarity", false]], "create_combined_dataset() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.create_combined_dataset", false]], "create_hparams() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.create_hparams", false]], "create_hparams() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.create_hparams", false]], "create_norm_adj_mat() (recommenders.models.deeprec.datamodel.implicitcf.implicitcf method)": [[3, "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF.create_norm_adj_mat", false]], "data_pipeline() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.data_pipeline", false]], "data_preprocessing() (in module recommenders.datasets.amazon_reviews)": [[0, "recommenders.datasets.amazon_reviews.data_preprocessing", false]], "datafile (class in recommenders.models.ncf.dataset)": [[3, "recommenders.models.ncf.dataset.DataFile", false]], "dataset (class in recommenders.models.ncf.dataset)": [[3, "recommenders.models.ncf.dataset.Dataset", false]], "dcg_score() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.dcg_score", false]], "dim (recommenders.models.newsrec.models.layers.attlayer2 attribute)": [[3, "recommenders.models.newsrec.models.layers.AttLayer2.dim", false]], "dim1 (in module recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.dim1", false]], "dim2 (in module recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.dim2", false]], "dim3 (in module recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.dim3", false]], "display_metrics() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.display_metrics", false]], "display_metrics() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.display_metrics", false]], "distributional_coverage() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.distributional_coverage", false]], "distributional_coverage() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.distributional_coverage", false]], "diversity() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.diversity", false]], "diversity() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.diversity", false]], "dkn (class in recommenders.models.deeprec.models.dkn)": [[3, "recommenders.models.deeprec.models.dkn.DKN", false]], "dknitem2item (class in recommenders.models.deeprec.models.dkn_item2item)": [[3, "recommenders.models.deeprec.models.dkn_item2item.DKNItem2Item", false]], "dknitem2itemtextiterator (class in recommenders.models.deeprec.io.dkn_item2item_iterator)": [[3, "recommenders.models.deeprec.io.dkn_item2item_iterator.DKNItem2itemTextIterator", false]], "dkntextiterator (class in recommenders.models.deeprec.io.dkn_iterator)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator", false]], "download_and_extract() (in module recommenders.datasets.amazon_reviews)": [[0, "recommenders.datasets.amazon_reviews.download_and_extract", false]], "download_and_extract_glove() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.download_and_extract_glove", false]], "download_criteo() (in module recommenders.datasets.criteo)": [[0, "recommenders.datasets.criteo.download_criteo", false]], "download_deeprec_resources() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.download_deeprec_resources", false]], "download_mind() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.download_mind", false]], "download_movielens() (in module recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.download_movielens", false]], "download_path() (in module recommenders.datasets.download_utils)": [[0, "recommenders.datasets.download_utils.download_path", false]], "embedding() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.embedding", false]], "emptyfileexception": [[3, "recommenders.models.ncf.dataset.EmptyFileException", false]], "encoder (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.Encoder", false]], "encoderlayer (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.EncoderLayer", false]], "eval() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.eval", false]], "eval() (recommenders.models.deeprec.models.dkn_item2item.dknitem2item method)": [[3, "recommenders.models.deeprec.models.dkn_item2item.DKNItem2Item.eval", false]], "eval() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.eval", false]], "eval_out() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.eval_out", false]], "evaluate() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.evaluate", false]], "evaluate_valid() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.evaluate_valid", false]], "evaluation_log_hook() (in module recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.evaluation_log_hook", false]], "execute_notebook() (in module recommenders.utils.notebook_utils)": [[5, "recommenders.utils.notebook_utils.execute_notebook", false]], "exp_var() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.exp_var", false]], "exp_var() (recommenders.evaluation.spark_evaluation.sparkratingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation.exp_var", false]], "exponential_decay() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.exponential_decay", false]], "export_model() (in module recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.export_model", false]], "extract_criteo() (in module recommenders.datasets.criteo)": [[0, "recommenders.datasets.criteo.extract_criteo", false]], "extract_mind() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.extract_mind", false]], "extract_movielens() (in module recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.extract_movielens", false]], "feature_count (recommenders.datasets.pandas_df_utils.libffmconverter attribute)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.feature_count", false]], "ffmtextiterator (class in recommenders.models.deeprec.io.iterator)": [[3, "recommenders.models.deeprec.io.iterator.FFMTextIterator", false]], "field_count (recommenders.datasets.pandas_df_utils.libffmconverter attribute)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.field_count", false]], "filename (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.filename", false]], "filenotsortedexception": [[3, "recommenders.models.ncf.dataset.FileNotSortedException", false]], "filepath (recommenders.datasets.pandas_df_utils.libffmconverter attribute)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.filepath", false]], "filter_by() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.filter_by", false]], "filter_k_core() (in module recommenders.datasets.split_utils)": [[0, "recommenders.datasets.split_utils.filter_k_core", false]], "fit() (recommenders.datasets.pandas_df_utils.libffmconverter method)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.fit", false]], "fit() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.fit", false]], "fit() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.fit", false]], "fit() (recommenders.models.deeprec.models.sequential.sequential_base_model.sequentialbasemodel method)": [[3, "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel.fit", false]], "fit() (recommenders.models.ncf.ncf_singlenode.ncf method)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF.fit", false]], "fit() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.fit", false]], "fit() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.fit", false]], "fit() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.fit", false]], "fit() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.fit", false]], "fit() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.fit", false]], "fit() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.fit", false]], "fit() (recommenders.models.vowpal_wabbit.vw.vw method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.fit", false]], "fit_transform() (recommenders.datasets.pandas_df_utils.libffmconverter method)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.fit_transform", false]], "fit_transform() (recommenders.models.lightgbm.lightgbm_utils.numencoder method)": [[3, "recommenders.models.lightgbm.lightgbm_utils.NumEncoder.fit_transform", false]], "flat_config() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.flat_config", false]], "free_energy() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.free_energy", false]], "gen_affinity_matrix() (recommenders.datasets.sparse.affinitymatrix method)": [[0, "recommenders.datasets.sparse.AffinityMatrix.gen_affinity_matrix", false]], "gen_feed_dict() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.gen_feed_dict", false]], "gen_feed_dict() (recommenders.models.deeprec.io.iterator.baseiterator method)": [[3, "recommenders.models.deeprec.io.iterator.BaseIterator.gen_feed_dict", false]], "gen_feed_dict() (recommenders.models.deeprec.io.iterator.ffmtextiterator method)": [[3, "recommenders.models.deeprec.io.iterator.FFMTextIterator.gen_feed_dict", false]], "gen_feed_dict() (recommenders.models.deeprec.io.sequential_iterator.sequentialiterator method)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator.gen_feed_dict", false]], "gen_infer_feed_dict() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.gen_infer_feed_dict", false]], "generate_embeddings() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.generate_embeddings", false]], "generate_graph() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.generate_graph", false]], "generate_param_grid() (in module recommenders.tuning.parameter_sweep)": [[4, "recommenders.tuning.parameter_sweep.generate_param_grid", false]], "get_config() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.get_config", false]], "get_cuda_version() (in module recommenders.utils.gpu_utils)": [[5, "recommenders.utils.gpu_utils.get_cuda_version", false]], "get_cudnn_version() (in module recommenders.utils.gpu_utils)": [[5, "recommenders.utils.gpu_utils.get_cudnn_version", false]], "get_data() (recommenders.models.vae.multinomial_vae.annealingcallback method)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback.get_data", false]], "get_data() (recommenders.models.vae.multinomial_vae.metrics method)": [[3, "recommenders.models.vae.multinomial_vae.Metrics.get_data", false]], "get_data() (recommenders.models.vae.standard_vae.annealingcallback method)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback.get_data", false]], "get_data() (recommenders.models.vae.standard_vae.metrics method)": [[3, "recommenders.models.vae.standard_vae.Metrics.get_data", false]], "get_df() (recommenders.datasets.movielens.mockmovielensschema class method)": [[0, "recommenders.datasets.movielens.MockMovielensSchema.get_df", false]], "get_gpu_info() (in module recommenders.utils.gpu_utils)": [[5, "recommenders.utils.gpu_utils.get_gpu_info", false]], "get_item_based_topk() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.get_item_based_topk", false]], "get_log() (recommenders.utils.tf_utils.metricslogger method)": [[5, "recommenders.utils.tf_utils.MetricsLogger.get_log", false]], "get_mind_data_set() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.get_mind_data_set", false]], "get_norm_adj_mat() (recommenders.models.deeprec.datamodel.implicitcf.implicitcf method)": [[3, "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF.get_norm_adj_mat", false]], "get_number_gpus() (in module recommenders.utils.gpu_utils)": [[5, "recommenders.utils.gpu_utils.get_number_gpus", false]], "get_number_processors() (in module recommenders.utils.general_utils)": [[5, "recommenders.utils.general_utils.get_number_processors", false]], "get_optimal_beta() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.get_optimal_beta", false]], "get_optimal_beta() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.get_optimal_beta", false]], "get_params() (recommenders.datasets.pandas_df_utils.libffmconverter method)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.get_params", false]], "get_physical_memory() (in module recommenders.utils.general_utils)": [[5, "recommenders.utils.general_utils.get_physical_memory", false]], "get_popularity_based_topk() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.get_popularity_based_topk", false]], "get_public_domain_text() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.get_public_domain_text", false]], "get_review_data() (in module recommenders.datasets.amazon_reviews)": [[0, "recommenders.datasets.amazon_reviews.get_review_data", false]], "get_session() (in module recommenders.datasets.wikidata)": [[0, "recommenders.datasets.wikidata.get_session", false]], "get_spark_df() (recommenders.datasets.movielens.mockmovielensschema class method)": [[0, "recommenders.datasets.movielens.MockMovielensSchema.get_spark_df", false]], "get_spark_schema() (in module recommenders.datasets.criteo)": [[0, "recommenders.datasets.criteo.get_spark_schema", false]], "get_stop_words() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.get_stop_words", false]], "get_tokens() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.get_tokens", false]], "get_top_k_items() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.get_top_k_items", false]], "get_top_k_recommendations() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.get_top_k_recommendations", false]], "get_top_k_scored_items() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.get_top_k_scored_items", false]], "get_topk_most_similar_users() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.get_topk_most_similar_users", false]], "get_train_input() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.get_train_input", false]], "get_user_history() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.get_user_history", false]], "get_valid_input() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.get_valid_input", false]], "get_words_and_entities() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.get_words_and_entities", false]], "gibbs_protocol() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.gibbs_protocol", false]], "gibbs_sampling() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.gibbs_sampling", false]], "graph (recommenders.models.newsrec.models.base_model.basemodel attribute)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.graph", false]], "group_labels() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.group_labels", false]], "group_labels() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.group_labels", false]], "has_columns() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.has_columns", false]], "has_same_base_dtype() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.has_same_base_dtype", false]], "hide_fastai_progress_bar() (in module recommenders.models.fastai.fastai_utils)": [[3, "recommenders.models.fastai.fastai_utils.hide_fastai_progress_bar", false]], "his_size (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.his_size", false]], "his_size (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.his_size", false]], "historical_item_novelty() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.historical_item_novelty", false]], "historical_item_novelty() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.historical_item_novelty", false]], "hit_score() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.hit_score", false]], "hparam (recommenders.models.newsrec.models.lstur.lsturmodel attribute)": [[3, "recommenders.models.newsrec.models.lstur.LSTURModel.hparam", false]], "hparam (recommenders.models.newsrec.models.naml.namlmodel attribute)": [[3, "recommenders.models.newsrec.models.naml.NAMLModel.hparam", false]], "hparam (recommenders.models.newsrec.models.npa.npamodel attribute)": [[3, "recommenders.models.newsrec.models.npa.NPAModel.hparam", false]], "hparam (recommenders.models.newsrec.models.nrms.nrmsmodel attribute)": [[3, "recommenders.models.newsrec.models.nrms.NRMSModel.hparam", false]], "hparams (class in recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.HParams", false]], "hparams (recommenders.models.newsrec.models.base_model.basemodel attribute)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.hparams", false]], "id_spliter (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.ID_spliter", false]], "id_spliter (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.ID_spliter", false]], "implicitcf (class in recommenders.models.deeprec.datamodel.implicitcf)": [[3, "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF", false]], "inclusion_index() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.inclusion_index", false]], "infer() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.infer", false]], "infer_embedding() (recommenders.models.deeprec.models.dkn.dkn method)": [[3, "recommenders.models.deeprec.models.dkn.DKN.infer_embedding", false]], "infer_embedding() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.infer_embedding", false]], "init_behaviors() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.init_behaviors", false]], "init_behaviors() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.init_behaviors", false]], "init_gpu() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.init_gpu", false]], "init_metrics() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.init_metrics", false]], "init_news() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.init_news", false]], "init_news() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.init_news", false]], "init_parameters() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.init_parameters", false]], "init_training_session() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.init_training_session", false]], "interval (recommenders.utils.timer.timer property)": [[5, "recommenders.utils.timer.Timer.interval", false]], "invert_dictionary() (in module recommenders.utils.general_utils)": [[5, "recommenders.utils.general_utils.invert_dictionary", false]], "is_databricks() (in module recommenders.utils.notebook_utils)": [[5, "recommenders.utils.notebook_utils.is_databricks", false]], "is_jupyter() (in module recommenders.utils.notebook_utils)": [[5, "recommenders.utils.notebook_utils.is_jupyter", false]], "itemnum (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.itemnum", false]], "itemnum (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.itemnum", false]], "items (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.Items", false]], "jaccard() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.jaccard", false]], "layernormalization (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.LayerNormalization", false]], "lexicographers_mutual_information() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.lexicographers_mutual_information", false]], "libffmconverter (class in recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter", false]], "lift() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.lift", false]], "lightgcn (class in recommenders.models.deeprec.models.graphrec.lightgcn)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN", false]], "line_graph() (in module recommenders.utils.plot)": [[5, "recommenders.utils.plot.line_graph", false]], "load() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.load", false]], "load() (recommenders.models.ncf.ncf_singlenode.ncf method)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF.load", false]], "load() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.load", false]], "load_data() (recommenders.models.ncf.dataset.datafile method)": [[3, "recommenders.models.ncf.dataset.DataFile.load_data", false]], "load_data_from_file() (recommenders.models.deeprec.io.dkn_item2item_iterator.dknitem2itemtextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_item2item_iterator.DKNItem2itemTextIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.deeprec.io.iterator.baseiterator method)": [[3, "recommenders.models.deeprec.io.iterator.BaseIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.deeprec.io.iterator.ffmtextiterator method)": [[3, "recommenders.models.deeprec.io.iterator.FFMTextIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.deeprec.io.sequential_iterator.sequentialiterator method)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.load_data_from_file", false]], "load_data_from_file() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.load_data_from_file", false]], "load_dict() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.load_dict", false]], "load_dict() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.load_dict", false]], "load_dict() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.load_dict", false]], "load_glove_matrix() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.load_glove_matrix", false]], "load_impression_from_file() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.load_impression_from_file", false]], "load_impression_from_file() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.load_impression_from_file", false]], "load_infer_data_from_file() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.load_infer_data_from_file", false]], "load_item_df() (in module recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.load_item_df", false]], "load_model() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.load_model", false]], "load_news_from_file() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.load_news_from_file", false]], "load_news_from_file() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.load_news_from_file", false]], "load_pandas_df() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.load_pandas_df", false]], "load_pandas_df() (in module recommenders.datasets.criteo)": [[0, "recommenders.datasets.criteo.load_pandas_df", false]], "load_pandas_df() (in module recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.load_pandas_df", false]], "load_spark_df() (in module recommenders.datasets.criteo)": [[0, "recommenders.datasets.criteo.load_spark_df", false]], "load_spark_df() (in module recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.load_spark_df", false]], "load_user_from_file() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.load_user_from_file", false]], "load_user_from_file() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.load_user_from_file", false]], "load_yaml() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.load_yaml", false]], "log() (recommenders.utils.tf_utils.metricslogger method)": [[5, "recommenders.utils.tf_utils.MetricsLogger.log", false]], "log_retries() (in module recommenders.datasets.wikidata)": [[0, "recommenders.datasets.wikidata.log_retries", false]], "logloss() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.logloss", false]], "loss_function() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.loss_function", false]], "loss_function() (recommenders.models.sasrec.ssept.ssept method)": [[3, "recommenders.models.sasrec.ssept.SSEPT.loss_function", false]], "losses() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.losses", false]], "losshistory (class in recommenders.models.vae.multinomial_vae)": [[3, "recommenders.models.vae.multinomial_vae.LossHistory", false]], "losshistory (class in recommenders.models.vae.standard_vae)": [[3, "recommenders.models.vae.standard_vae.LossHistory", false]], "lru_cache_df() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.lru_cache_df", false]], "lsturmodel (class in recommenders.models.newsrec.models.lstur)": [[3, "recommenders.models.newsrec.models.lstur.LSTURModel", false]], "mae() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.mae", false]], "mae() (recommenders.evaluation.spark_evaluation.sparkratingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation.mae", false]], "map() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.map", false]], "map() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.map", false]], "map_at_k() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.map_at_k", false]], "map_at_k() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.map_at_k", false]], "map_back_sparse() (recommenders.datasets.sparse.affinitymatrix method)": [[0, "recommenders.datasets.sparse.AffinityMatrix.map_back_sparse", false]], "mask() (recommenders.models.newsrec.models.layers.selfattention method)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention.Mask", false]], "maxlen (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.maxlen", false]], "maybe_download() (in module recommenders.datasets.download_utils)": [[0, "recommenders.datasets.download_utils.maybe_download", false]], "merge_ranking_true_pred() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.merge_ranking_true_pred", false]], "merge_rating_true_pred() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.merge_rating_true_pred", false]], "message (recommenders.evaluation.python_evaluation.columnmismatcherror attribute)": [[1, "recommenders.evaluation.python_evaluation.ColumnMismatchError.message", false]], "message (recommenders.evaluation.python_evaluation.columntypemismatcherror attribute)": [[1, "recommenders.evaluation.python_evaluation.ColumnTypeMismatchError.message", false]], "metrics (class in recommenders.models.vae.multinomial_vae)": [[3, "recommenders.models.vae.multinomial_vae.Metrics", false]], "metrics (class in recommenders.models.vae.standard_vae)": [[3, "recommenders.models.vae.standard_vae.Metrics", false]], "metricslogger (class in recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.MetricsLogger", false]], "min_rating_filter_pandas() (in module recommenders.datasets.split_utils)": [[0, "recommenders.datasets.split_utils.min_rating_filter_pandas", false]], "min_rating_filter_spark() (in module recommenders.datasets.split_utils)": [[0, "recommenders.datasets.split_utils.min_rating_filter_spark", false]], "mindalliterator (class in recommenders.models.newsrec.io.mind_all_iterator)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator", false]], "minditerator (class in recommenders.models.newsrec.io.mind_iterator)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator", false]], "missingfieldsexception": [[3, "recommenders.models.ncf.dataset.MissingFieldsException", false]], "missinguserexception": [[3, "recommenders.models.ncf.dataset.MissingUserException", false]], "mockmovielensschema (class in recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.MockMovielensSchema", false]], "mockmovielensschema.config (class in recommenders.datasets.movielens)": [[0, "recommenders.datasets.movielens.MockMovielensSchema.Config", false]], "model_perf_plots() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.model_perf_plots", false]], "module": [[0, "module-recommenders.datasets.amazon_reviews", false], [0, "module-recommenders.datasets.covid_utils", false], [0, "module-recommenders.datasets.criteo", false], [0, "module-recommenders.datasets.download_utils", false], [0, "module-recommenders.datasets.mind", false], [0, "module-recommenders.datasets.movielens", false], [0, "module-recommenders.datasets.pandas_df_utils", false], [0, "module-recommenders.datasets.python_splitters", false], [0, "module-recommenders.datasets.spark_splitters", false], [0, "module-recommenders.datasets.sparse", false], [0, "module-recommenders.datasets.split_utils", false], [0, "module-recommenders.datasets.wikidata", false], [1, "module-recommenders.evaluation.python_evaluation", false], [1, "module-recommenders.evaluation.spark_evaluation", false], [3, "module-recommenders.models.cornac.cornac_utils", false], [3, "module-recommenders.models.deeprec.DataModel.ImplicitCF", false], [3, "module-recommenders.models.deeprec.deeprec_utils", false], [3, "module-recommenders.models.deeprec.io.dkn_item2item_iterator", false], [3, "module-recommenders.models.deeprec.io.dkn_iterator", false], [3, "module-recommenders.models.deeprec.io.iterator", false], [3, "module-recommenders.models.deeprec.io.nextitnet_iterator", false], [3, "module-recommenders.models.deeprec.io.sequential_iterator", false], [3, "module-recommenders.models.deeprec.models.base_model", false], [3, "module-recommenders.models.deeprec.models.dkn", false], [3, "module-recommenders.models.deeprec.models.dkn_item2item", false], [3, "module-recommenders.models.deeprec.models.graphrec.lightgcn", false], [3, "module-recommenders.models.deeprec.models.sequential.asvd", false], [3, "module-recommenders.models.deeprec.models.sequential.caser", false], [3, "module-recommenders.models.deeprec.models.sequential.nextitnet", false], [3, "module-recommenders.models.deeprec.models.sequential.rnn_cell_implement", false], [3, "module-recommenders.models.deeprec.models.sequential.sequential_base_model", false], [3, "module-recommenders.models.deeprec.models.sequential.sli_rec", false], [3, "module-recommenders.models.deeprec.models.xDeepFM", false], [3, "module-recommenders.models.fastai.fastai_utils", false], [3, "module-recommenders.models.lightfm.lightfm_utils", false], [3, "module-recommenders.models.lightgbm.lightgbm_utils", false], [3, "module-recommenders.models.ncf.dataset", false], [3, "module-recommenders.models.ncf.ncf_singlenode", false], [3, "module-recommenders.models.newsrec.io.mind_all_iterator", false], [3, "module-recommenders.models.newsrec.io.mind_iterator", false], [3, "module-recommenders.models.newsrec.models.base_model", false], [3, "module-recommenders.models.newsrec.models.layers", false], [3, "module-recommenders.models.newsrec.models.lstur", false], [3, "module-recommenders.models.newsrec.models.naml", false], [3, "module-recommenders.models.newsrec.models.npa", false], [3, "module-recommenders.models.newsrec.models.nrms", false], [3, "module-recommenders.models.newsrec.newsrec_utils", false], [3, "module-recommenders.models.rbm.rbm", false], [3, "module-recommenders.models.sar.sar_singlenode", false], [3, "module-recommenders.models.sasrec.model", false], [3, "module-recommenders.models.sasrec.sampler", false], [3, "module-recommenders.models.sasrec.ssept", false], [3, "module-recommenders.models.sasrec.util", false], [3, "module-recommenders.models.surprise.surprise_utils", false], [3, "module-recommenders.models.tfidf.tfidf_utils", false], [3, "module-recommenders.models.vae.multinomial_vae", false], [3, "module-recommenders.models.vae.standard_vae", false], [3, "module-recommenders.models.vowpal_wabbit.vw", false], [3, "module-recommenders.models.wide_deep.wide_deep_utils", false], [4, "module-recommenders.tuning.parameter_sweep", false], [5, "module-recommenders.utils.general_utils", false], [5, "module-recommenders.utils.gpu_utils", false], [5, "module-recommenders.utils.k8s_utils", false], [5, "module-recommenders.utils.notebook_memory_management", false], [5, "module-recommenders.utils.notebook_utils", false], [5, "module-recommenders.utils.plot", false], [5, "module-recommenders.utils.python_utils", false], [5, "module-recommenders.utils.spark_utils", false], [5, "module-recommenders.utils.tf_utils", false], [5, "module-recommenders.utils.timer", false]], "mrr_score() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.mrr_score", false]], "mult_vae (class in recommenders.models.vae.multinomial_vae)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE", false]], "multiheadattention (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.MultiHeadAttention", false]], "multinomial_distribution() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.multinomial_distribution", false]], "multinomial_sampling() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.multinomial_sampling", false]], "mutual_information() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.mutual_information", false]], "n_workers (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.n_workers", false]], "name (recommenders.datasets.movielens.mockmovielensschema.config attribute)": [[0, "recommenders.datasets.movielens.MockMovielensSchema.Config.name", false]], "namlmodel (class in recommenders.models.newsrec.models.naml)": [[3, "recommenders.models.newsrec.models.naml.NAMLModel", false]], "ncf (class in recommenders.models.ncf.ncf_singlenode)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF", false]], "ndcg_at_k() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.ndcg_at_k", false]], "ndcg_at_k() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.ndcg_at_k", false]], "ndcg_per_epoch() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.ndcg_per_epoch", false]], "ndcg_per_epoch() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.ndcg_per_epoch", false]], "ndcg_score() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.ndcg_score", false]], "negative_feedback_sampler() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.negative_feedback_sampler", false]], "negativesampler (class in recommenders.models.ncf.dataset)": [[3, "recommenders.models.ncf.dataset.NegativeSampler", false]], "newsample() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.newsample", false]], "nextitnetiterator (class in recommenders.models.deeprec.io.nextitnet_iterator)": [[3, "recommenders.models.deeprec.io.nextitnet_iterator.NextItNetIterator", false]], "nextitnetmodel (class in recommenders.models.deeprec.models.sequential.nextitnet)": [[3, "recommenders.models.deeprec.models.sequential.nextitnet.NextItNetModel", false]], "nn_batch_generator() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.nn_batch_generator", false]], "nn_batch_generator() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.nn_batch_generator", false]], "nodes_to_replicas() (in module recommenders.utils.k8s_utils)": [[5, "recommenders.utils.k8s_utils.nodes_to_replicas", false]], "novelty() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.novelty", false]], "novelty() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.novelty", false]], "npamodel (class in recommenders.models.newsrec.models.npa)": [[3, "recommenders.models.newsrec.models.npa.NPAModel", false]], "npratio (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.npratio", false]], "npratio (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.npratio", false]], "nrmsmodel (class in recommenders.models.newsrec.models.nrms)": [[3, "recommenders.models.newsrec.models.nrms.NRMSModel", false]], "numencoder (class in recommenders.models.lightgbm.lightgbm_utils)": [[3, "recommenders.models.lightgbm.lightgbm_utils.NumEncoder", false]], "numpy_stratified_split() (in module recommenders.datasets.python_splitters)": [[0, "recommenders.datasets.python_splitters.numpy_stratified_split", false]], "on_batch_end() (recommenders.models.vae.multinomial_vae.annealingcallback method)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback.on_batch_end", false]], "on_batch_end() (recommenders.models.vae.standard_vae.annealingcallback method)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback.on_batch_end", false]], "on_epoch_end() (recommenders.models.vae.multinomial_vae.annealingcallback method)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback.on_epoch_end", false]], "on_epoch_end() (recommenders.models.vae.multinomial_vae.losshistory method)": [[3, "recommenders.models.vae.multinomial_vae.LossHistory.on_epoch_end", false]], "on_epoch_end() (recommenders.models.vae.multinomial_vae.metrics method)": [[3, "recommenders.models.vae.multinomial_vae.Metrics.on_epoch_end", false]], "on_epoch_end() (recommenders.models.vae.standard_vae.annealingcallback method)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback.on_epoch_end", false]], "on_epoch_end() (recommenders.models.vae.standard_vae.losshistory method)": [[3, "recommenders.models.vae.standard_vae.LossHistory.on_epoch_end", false]], "on_epoch_end() (recommenders.models.vae.standard_vae.metrics method)": [[3, "recommenders.models.vae.standard_vae.Metrics.on_epoch_end", false]], "on_train_begin() (recommenders.models.vae.multinomial_vae.annealingcallback method)": [[3, "recommenders.models.vae.multinomial_vae.AnnealingCallback.on_train_begin", false]], "on_train_begin() (recommenders.models.vae.multinomial_vae.losshistory method)": [[3, "recommenders.models.vae.multinomial_vae.LossHistory.on_train_begin", false]], "on_train_begin() (recommenders.models.vae.multinomial_vae.metrics method)": [[3, "recommenders.models.vae.multinomial_vae.Metrics.on_train_begin", false]], "on_train_begin() (recommenders.models.vae.standard_vae.annealingcallback method)": [[3, "recommenders.models.vae.standard_vae.AnnealingCallback.on_train_begin", false]], "on_train_begin() (recommenders.models.vae.standard_vae.losshistory method)": [[3, "recommenders.models.vae.standard_vae.LossHistory.on_train_begin", false]], "on_train_begin() (recommenders.models.vae.standard_vae.metrics method)": [[3, "recommenders.models.vae.standard_vae.Metrics.on_train_begin", false]], "output_size (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4alstmcell property)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4ALSTMCell.output_size", false]], "output_size (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4lstmcell property)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4LSTMCell.output_size", false]], "overwritemasking (class in recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.OverwriteMasking", false]], "pandas_input_fn() (in module recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.pandas_input_fn", false]], "pandas_input_fn_for_saved_model() (in module recommenders.utils.tf_utils)": [[5, "recommenders.utils.tf_utils.pandas_input_fn_for_saved_model", false]], "pandashash (class in recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.PandasHash", false]], "parse_file() (recommenders.models.deeprec.io.sequential_iterator.sequentialiterator method)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator.parse_file", false]], "parse_test_params() (recommenders.models.vowpal_wabbit.vw.vw method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.parse_test_params", false]], "parse_train_params() (recommenders.models.vowpal_wabbit.vw.vw method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.parse_train_params", false]], "parser_one_line() (recommenders.models.deeprec.io.dkn_iterator.dkntextiterator method)": [[3, "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator.parser_one_line", false]], "parser_one_line() (recommenders.models.deeprec.io.iterator.baseiterator method)": [[3, "recommenders.models.deeprec.io.iterator.BaseIterator.parser_one_line", false]], "parser_one_line() (recommenders.models.deeprec.io.iterator.ffmtextiterator method)": [[3, "recommenders.models.deeprec.io.iterator.FFMTextIterator.parser_one_line", false]], "parser_one_line() (recommenders.models.deeprec.io.sequential_iterator.sequentialiterator method)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator.parser_one_line", false]], "parser_one_line() (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator method)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.parser_one_line", false]], "parser_one_line() (recommenders.models.newsrec.io.mind_iterator.minditerator method)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.parser_one_line", false]], "personalizedattentivepooling() (in module recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.PersonalizedAttentivePooling", false]], "placeholder() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.placeholder", false]], "pointwisefeedforward (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.PointWiseFeedForward", false]], "pre_run_cell() (in module recommenders.utils.notebook_memory_management)": [[5, "recommenders.utils.notebook_memory_management.pre_run_cell", false]], "precision_at_k() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.precision_at_k", false]], "precision_at_k() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.precision_at_k", false]], "predict() (in module recommenders.models.cornac.cornac_utils)": [[3, "recommenders.models.cornac.cornac_utils.predict", false]], "predict() (in module recommenders.models.surprise.surprise_utils)": [[3, "recommenders.models.surprise.surprise_utils.predict", false]], "predict() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.predict", false]], "predict() (recommenders.models.deeprec.models.sequential.sequential_base_model.sequentialbasemodel method)": [[3, "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel.predict", false]], "predict() (recommenders.models.ncf.ncf_singlenode.ncf method)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF.predict", false]], "predict() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.predict", false]], "predict() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.predict", false]], "predict() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.predict", false]], "predict() (recommenders.models.sasrec.ssept.ssept method)": [[3, "recommenders.models.sasrec.ssept.SSEPT.predict", false]], "predict() (recommenders.models.vowpal_wabbit.vw.vw method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.predict", false]], "predict_ranking() (in module recommenders.models.cornac.cornac_utils)": [[3, "recommenders.models.cornac.cornac_utils.predict_ranking", false]], "prepare_all_predictions() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.prepare_all_predictions", false]], "prepare_hparams() (in module recommenders.models.deeprec.deeprec_utils)": [[3, "recommenders.models.deeprec.deeprec_utils.prepare_hparams", false]], "prepare_hparams() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.prepare_hparams", false]], "prepare_test_df() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.prepare_test_df", false]], "process_split_ratio() (in module recommenders.datasets.split_utils)": [[0, "recommenders.datasets.split_utils.process_split_ratio", false]], "python_chrono_split() (in module recommenders.datasets.python_splitters)": [[0, "recommenders.datasets.python_splitters.python_chrono_split", false]], "python_random_split() (in module recommenders.datasets.python_splitters)": [[0, "recommenders.datasets.python_splitters.python_random_split", false]], "python_stratified_split() (in module recommenders.datasets.python_splitters)": [[0, "recommenders.datasets.python_splitters.python_stratified_split", false]], "qps_to_replicas() (in module recommenders.utils.k8s_utils)": [[5, "recommenders.utils.k8s_utils.qps_to_replicas", false]], "r_precision_at_k() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.r_precision_at_k", false]], "rbm (class in recommenders.models.rbm.rbm)": [[3, "recommenders.models.rbm.rbm.RBM", false]], "read_clickhistory() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.read_clickhistory", false]], "read_linked_entities() (in module recommenders.datasets.wikidata)": [[0, "recommenders.datasets.wikidata.read_linked_entities", false]], "read_notebook() (in module recommenders.utils.notebook_utils)": [[5, "recommenders.utils.notebook_utils.read_notebook", false]], "recall_at_k() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.recall_at_k", false]], "recall_at_k() (recommenders.evaluation.spark_evaluation.sparkrankingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation.recall_at_k", false]], "recommend_k_items() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.recommend_k_items", false]], "recommend_k_items() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.recommend_k_items", false]], "recommend_k_items() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.recommend_k_items", false]], "recommend_k_items() (recommenders.models.vae.multinomial_vae.metrics method)": [[3, "recommenders.models.vae.multinomial_vae.Metrics.recommend_k_items", false]], "recommend_k_items() (recommenders.models.vae.multinomial_vae.mult_vae method)": [[3, "recommenders.models.vae.multinomial_vae.Mult_VAE.recommend_k_items", false]], "recommend_k_items() (recommenders.models.vae.standard_vae.metrics method)": [[3, "recommenders.models.vae.standard_vae.Metrics.recommend_k_items", false]], "recommend_k_items() (recommenders.models.vae.standard_vae.standardvae method)": [[3, "recommenders.models.vae.standard_vae.StandardVAE.recommend_k_items", false]], "recommend_top_k_items() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.recommend_top_k_items", false]], "recommenders.datasets.amazon_reviews": [[0, "module-recommenders.datasets.amazon_reviews", false]], "recommenders.datasets.covid_utils": [[0, "module-recommenders.datasets.covid_utils", false]], "recommenders.datasets.criteo": [[0, "module-recommenders.datasets.criteo", false]], "recommenders.datasets.download_utils": [[0, "module-recommenders.datasets.download_utils", false]], "recommenders.datasets.mind": [[0, "module-recommenders.datasets.mind", false]], "recommenders.datasets.movielens": [[0, "module-recommenders.datasets.movielens", false]], "recommenders.datasets.pandas_df_utils": [[0, "module-recommenders.datasets.pandas_df_utils", false]], "recommenders.datasets.python_splitters": [[0, "module-recommenders.datasets.python_splitters", false]], "recommenders.datasets.spark_splitters": [[0, "module-recommenders.datasets.spark_splitters", false]], "recommenders.datasets.sparse": [[0, "module-recommenders.datasets.sparse", false]], "recommenders.datasets.split_utils": [[0, "module-recommenders.datasets.split_utils", false]], "recommenders.datasets.wikidata": [[0, "module-recommenders.datasets.wikidata", false]], "recommenders.evaluation.python_evaluation": [[1, "module-recommenders.evaluation.python_evaluation", false]], "recommenders.evaluation.spark_evaluation": [[1, "module-recommenders.evaluation.spark_evaluation", false]], "recommenders.models.cornac.cornac_utils": [[3, "module-recommenders.models.cornac.cornac_utils", false]], "recommenders.models.deeprec.datamodel.implicitcf": [[3, "module-recommenders.models.deeprec.DataModel.ImplicitCF", false]], "recommenders.models.deeprec.deeprec_utils": [[3, "module-recommenders.models.deeprec.deeprec_utils", false]], "recommenders.models.deeprec.io.dkn_item2item_iterator": [[3, "module-recommenders.models.deeprec.io.dkn_item2item_iterator", false]], "recommenders.models.deeprec.io.dkn_iterator": [[3, "module-recommenders.models.deeprec.io.dkn_iterator", false]], "recommenders.models.deeprec.io.iterator": [[3, "module-recommenders.models.deeprec.io.iterator", false]], "recommenders.models.deeprec.io.nextitnet_iterator": [[3, "module-recommenders.models.deeprec.io.nextitnet_iterator", false]], "recommenders.models.deeprec.io.sequential_iterator": [[3, "module-recommenders.models.deeprec.io.sequential_iterator", false]], "recommenders.models.deeprec.models.base_model": [[3, "module-recommenders.models.deeprec.models.base_model", false]], "recommenders.models.deeprec.models.dkn": [[3, "module-recommenders.models.deeprec.models.dkn", false]], "recommenders.models.deeprec.models.dkn_item2item": [[3, "module-recommenders.models.deeprec.models.dkn_item2item", false]], "recommenders.models.deeprec.models.graphrec.lightgcn": [[3, "module-recommenders.models.deeprec.models.graphrec.lightgcn", false]], "recommenders.models.deeprec.models.sequential.asvd": [[3, "module-recommenders.models.deeprec.models.sequential.asvd", false]], "recommenders.models.deeprec.models.sequential.caser": [[3, "module-recommenders.models.deeprec.models.sequential.caser", false]], "recommenders.models.deeprec.models.sequential.nextitnet": [[3, "module-recommenders.models.deeprec.models.sequential.nextitnet", false]], "recommenders.models.deeprec.models.sequential.rnn_cell_implement": [[3, "module-recommenders.models.deeprec.models.sequential.rnn_cell_implement", false]], "recommenders.models.deeprec.models.sequential.sequential_base_model": [[3, "module-recommenders.models.deeprec.models.sequential.sequential_base_model", false]], "recommenders.models.deeprec.models.sequential.sli_rec": [[3, "module-recommenders.models.deeprec.models.sequential.sli_rec", false]], "recommenders.models.deeprec.models.xdeepfm": [[3, "module-recommenders.models.deeprec.models.xDeepFM", false]], "recommenders.models.fastai.fastai_utils": [[3, "module-recommenders.models.fastai.fastai_utils", false]], "recommenders.models.lightfm.lightfm_utils": [[3, "module-recommenders.models.lightfm.lightfm_utils", false]], "recommenders.models.lightgbm.lightgbm_utils": [[3, "module-recommenders.models.lightgbm.lightgbm_utils", false]], "recommenders.models.ncf.dataset": [[3, "module-recommenders.models.ncf.dataset", false]], "recommenders.models.ncf.ncf_singlenode": [[3, "module-recommenders.models.ncf.ncf_singlenode", false]], "recommenders.models.newsrec.io.mind_all_iterator": [[3, "module-recommenders.models.newsrec.io.mind_all_iterator", false]], "recommenders.models.newsrec.io.mind_iterator": [[3, "module-recommenders.models.newsrec.io.mind_iterator", false]], "recommenders.models.newsrec.models.base_model": [[3, "module-recommenders.models.newsrec.models.base_model", false]], "recommenders.models.newsrec.models.layers": [[3, "module-recommenders.models.newsrec.models.layers", false]], "recommenders.models.newsrec.models.lstur": [[3, "module-recommenders.models.newsrec.models.lstur", false]], "recommenders.models.newsrec.models.naml": [[3, "module-recommenders.models.newsrec.models.naml", false]], "recommenders.models.newsrec.models.npa": [[3, "module-recommenders.models.newsrec.models.npa", false]], "recommenders.models.newsrec.models.nrms": [[3, "module-recommenders.models.newsrec.models.nrms", false]], "recommenders.models.newsrec.newsrec_utils": [[3, "module-recommenders.models.newsrec.newsrec_utils", false]], "recommenders.models.rbm.rbm": [[3, "module-recommenders.models.rbm.rbm", false]], "recommenders.models.sar.sar_singlenode": [[3, "module-recommenders.models.sar.sar_singlenode", false]], "recommenders.models.sasrec.model": [[3, "module-recommenders.models.sasrec.model", false]], "recommenders.models.sasrec.sampler": [[3, "module-recommenders.models.sasrec.sampler", false]], "recommenders.models.sasrec.ssept": [[3, "module-recommenders.models.sasrec.ssept", false]], "recommenders.models.sasrec.util": [[3, "module-recommenders.models.sasrec.util", false]], "recommenders.models.surprise.surprise_utils": [[3, "module-recommenders.models.surprise.surprise_utils", false]], "recommenders.models.tfidf.tfidf_utils": [[3, "module-recommenders.models.tfidf.tfidf_utils", false]], "recommenders.models.vae.multinomial_vae": [[3, "module-recommenders.models.vae.multinomial_vae", false]], "recommenders.models.vae.standard_vae": [[3, "module-recommenders.models.vae.standard_vae", false]], "recommenders.models.vowpal_wabbit.vw": [[3, "module-recommenders.models.vowpal_wabbit.vw", false]], "recommenders.models.wide_deep.wide_deep_utils": [[3, "module-recommenders.models.wide_deep.wide_deep_utils", false]], "recommenders.tuning.parameter_sweep": [[4, "module-recommenders.tuning.parameter_sweep", false]], "recommenders.utils.general_utils": [[5, "module-recommenders.utils.general_utils", false]], "recommenders.utils.gpu_utils": [[5, "module-recommenders.utils.gpu_utils", false]], "recommenders.utils.k8s_utils": [[5, "module-recommenders.utils.k8s_utils", false]], "recommenders.utils.notebook_memory_management": [[5, "module-recommenders.utils.notebook_memory_management", false]], "recommenders.utils.notebook_utils": [[5, "module-recommenders.utils.notebook_utils", false]], "recommenders.utils.plot": [[5, "module-recommenders.utils.plot", false]], "recommenders.utils.python_utils": [[5, "module-recommenders.utils.python_utils", false]], "recommenders.utils.spark_utils": [[5, "module-recommenders.utils.spark_utils", false]], "recommenders.utils.tf_utils": [[5, "module-recommenders.utils.tf_utils", false]], "recommenders.utils.timer": [[5, "module-recommenders.utils.timer", false]], "remove_duplicates() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.remove_duplicates", false]], "remove_nan() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.remove_nan", false]], "replicas_to_qps() (in module recommenders.utils.k8s_utils)": [[5, "recommenders.utils.k8s_utils.replicas_to_qps", false]], "rescale() (in module recommenders.utils.python_utils)": [[5, "recommenders.utils.python_utils.rescale", false]], "retrieve_text() (in module recommenders.datasets.covid_utils)": [[0, "recommenders.datasets.covid_utils.retrieve_text", false]], "rmse() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.rmse", false]], "rmse() (recommenders.evaluation.spark_evaluation.sparkratingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation.rmse", false]], "rsquared() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.rsquared", false]], "rsquared() (recommenders.evaluation.spark_evaluation.sparkratingevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation.rsquared", false]], "run_eval() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.run_eval", false]], "run_eval() (recommenders.models.deeprec.models.dkn_item2item.dknitem2item method)": [[3, "recommenders.models.deeprec.models.dkn_item2item.DKNItem2Item.run_eval", false]], "run_eval() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.run_eval", false]], "run_eval() (recommenders.models.deeprec.models.sequential.sequential_base_model.sequentialbasemodel method)": [[3, "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel.run_eval", false]], "run_eval() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.run_eval", false]], "run_get_embedding() (recommenders.models.deeprec.models.dkn.dkn method)": [[3, "recommenders.models.deeprec.models.dkn.DKN.run_get_embedding", false]], "sample() (recommenders.models.ncf.dataset.negativesampler method)": [[3, "recommenders.models.ncf.dataset.NegativeSampler.sample", false]], "sample_function() (in module recommenders.models.sasrec.sampler)": [[3, "recommenders.models.sasrec.sampler.sample_function", false]], "sample_hidden_units() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.sample_hidden_units", false]], "sample_visible_units() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.sample_visible_units", false]], "sarsinglenode (class in recommenders.models.sar.sar_singlenode)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode", false]], "sasrec (class in recommenders.models.sasrec.model)": [[3, "recommenders.models.sasrec.model.SASREC", false]], "sasrecdataset (class in recommenders.models.sasrec.util)": [[3, "recommenders.models.sasrec.util.SASRecDataSet", false]], "save() (recommenders.models.ncf.ncf_singlenode.ncf method)": [[3, "recommenders.models.ncf.ncf_singlenode.NCF.save", false]], "save() (recommenders.models.rbm.rbm.rbm method)": [[3, "recommenders.models.rbm.rbm.RBM.save", false]], "score() (in module recommenders.models.fastai.fastai_utils)": [[3, "recommenders.models.fastai.fastai_utils.score", false]], "score() (recommenders.models.deeprec.models.graphrec.lightgcn.lightgcn method)": [[3, "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN.score", false]], "score() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.score", false]], "search_wikidata() (in module recommenders.datasets.wikidata)": [[0, "recommenders.datasets.wikidata.search_wikidata", false]], "seed (recommenders.models.newsrec.models.base_model.basemodel attribute)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.seed", false]], "selfattention (class in recommenders.models.newsrec.models.layers)": [[3, "recommenders.models.newsrec.models.layers.SelfAttention", false]], "sequentialbasemodel (class in recommenders.models.deeprec.models.sequential.sequential_base_model)": [[3, "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel", false]], "sequentialiterator (class in recommenders.models.deeprec.io.sequential_iterator)": [[3, "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator", false]], "serendipity() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.serendipity", false]], "serendipity() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.serendipity", false]], "set_index() (recommenders.models.sar.sar_singlenode.sarsinglenode method)": [[3, "recommenders.models.sar.sar_singlenode.SARSingleNode.set_index", false]], "similar_items() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.similar_items", false]], "similar_users() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.similar_users", false]], "sli_recmodel (class in recommenders.models.deeprec.models.sequential.sli_rec)": [[3, "recommenders.models.deeprec.models.sequential.sli_rec.SLI_RECModel", false]], "spark_chrono_split() (in module recommenders.datasets.spark_splitters)": [[0, "recommenders.datasets.spark_splitters.spark_chrono_split", false]], "spark_random_split() (in module recommenders.datasets.spark_splitters)": [[0, "recommenders.datasets.spark_splitters.spark_random_split", false]], "spark_stratified_split() (in module recommenders.datasets.spark_splitters)": [[0, "recommenders.datasets.spark_splitters.spark_stratified_split", false]], "spark_timestamp_split() (in module recommenders.datasets.spark_splitters)": [[0, "recommenders.datasets.spark_splitters.spark_timestamp_split", false]], "sparkdiversityevaluation (class in recommenders.evaluation.spark_evaluation)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation", false]], "sparkrankingevaluation (class in recommenders.evaluation.spark_evaluation)": [[1, "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation", false]], "sparkratingevaluation (class in recommenders.evaluation.spark_evaluation)": [[1, "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation", false]], "split_pandas_data_with_ratios() (in module recommenders.datasets.split_utils)": [[0, "recommenders.datasets.split_utils.split_pandas_data_with_ratios", false]], "ssept (class in recommenders.models.sasrec.ssept)": [[3, "recommenders.models.sasrec.ssept.SSEPT", false]], "standardvae (class in recommenders.models.vae.standard_vae)": [[3, "recommenders.models.vae.standard_vae.StandardVAE", false]], "start() (recommenders.utils.timer.timer method)": [[5, "recommenders.utils.timer.Timer.start", false]], "start_or_get_spark() (in module recommenders.utils.spark_utils)": [[5, "recommenders.utils.spark_utils.start_or_get_spark", false]], "start_watching_memory() (in module recommenders.utils.notebook_memory_management)": [[5, "recommenders.utils.notebook_memory_management.start_watching_memory", false]], "state_size (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4alstmcell property)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4ALSTMCell.state_size", false]], "state_size (recommenders.models.deeprec.models.sequential.rnn_cell_implement.time4lstmcell property)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4LSTMCell.state_size", false]], "stop() (recommenders.utils.timer.timer method)": [[5, "recommenders.utils.timer.Timer.stop", false]], "stop_watching_memory() (in module recommenders.utils.notebook_memory_management)": [[5, "recommenders.utils.notebook_memory_management.stop_watching_memory", false]], "store_metadata() (in module recommenders.utils.notebook_utils)": [[5, "recommenders.utils.notebook_utils.store_metadata", false]], "surprise_trainset_to_df() (in module recommenders.models.surprise.surprise_utils)": [[3, "recommenders.models.surprise.surprise_utils.surprise_trainset_to_df", false]], "test_iterator (recommenders.models.newsrec.models.base_model.basemodel attribute)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.test_iterator", false]], "test_loader() (recommenders.models.ncf.dataset.dataset method)": [[3, "recommenders.models.ncf.dataset.Dataset.test_loader", false]], "tfidfrecommender (class in recommenders.models.tfidf.tfidf_utils)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender", false]], "time4alstmcell (class in recommenders.models.deeprec.models.sequential.rnn_cell_implement)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4ALSTMCell", false]], "time4lstmcell (class in recommenders.models.deeprec.models.sequential.rnn_cell_implement)": [[3, "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4LSTMCell", false]], "timer (class in recommenders.utils.timer)": [[5, "recommenders.utils.timer.Timer", false]], "title_size (recommenders.models.newsrec.io.mind_all_iterator.mindalliterator attribute)": [[3, "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator.title_size", false]], "title_size (recommenders.models.newsrec.io.mind_iterator.minditerator attribute)": [[3, "recommenders.models.newsrec.io.mind_iterator.MINDIterator.title_size", false]], "to_vw_cmd() (recommenders.models.vowpal_wabbit.vw.vw static method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.to_vw_cmd", false]], "to_vw_file() (recommenders.models.vowpal_wabbit.vw.vw method)": [[3, "recommenders.models.vowpal_wabbit.vw.VW.to_vw_file", false]], "tokenize_text() (recommenders.models.tfidf.tfidf_utils.tfidfrecommender method)": [[3, "recommenders.models.tfidf.tfidf_utils.TfidfRecommender.tokenize_text", false]], "track_model_metrics() (in module recommenders.models.lightfm.lightfm_utils)": [[3, "recommenders.models.lightfm.lightfm_utils.track_model_metrics", false]], "train() (recommenders.models.deeprec.models.base_model.basemodel method)": [[3, "recommenders.models.deeprec.models.base_model.BaseModel.train", false]], "train() (recommenders.models.newsrec.models.base_model.basemodel method)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.train", false]], "train() (recommenders.models.sasrec.model.sasrec method)": [[3, "recommenders.models.sasrec.model.SASREC.train", false]], "train_iterator (recommenders.models.newsrec.models.base_model.basemodel attribute)": [[3, "recommenders.models.newsrec.models.base_model.BaseModel.train_iterator", false]], "train_loader() (recommenders.models.deeprec.datamodel.implicitcf.implicitcf method)": [[3, "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF.train_loader", false]], "train_loader() (recommenders.models.ncf.dataset.dataset method)": [[3, "recommenders.models.ncf.dataset.Dataset.train_loader", false]], "transform() (recommenders.datasets.pandas_df_utils.libffmconverter method)": [[0, "recommenders.datasets.pandas_df_utils.LibffmConverter.transform", false]], "transform() (recommenders.models.lightgbm.lightgbm_utils.numencoder method)": [[3, "recommenders.models.lightgbm.lightgbm_utils.NumEncoder.transform", false]], "unpackbits() (in module recommenders.models.lightgbm.lightgbm_utils)": [[3, "recommenders.models.lightgbm.lightgbm_utils.unpackbits", false]], "unzip_file() (in module recommenders.datasets.download_utils)": [[0, "recommenders.datasets.download_utils.unzip_file", false]], "user (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.User", false]], "user (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.User", false]], "user_diversity() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.user_diversity", false]], "user_diversity() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.user_diversity", false]], "user_item_pairs() (in module recommenders.datasets.pandas_df_utils)": [[0, "recommenders.datasets.pandas_df_utils.user_item_pairs", false]], "user_item_serendipity() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.user_item_serendipity", false]], "user_item_serendipity() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.user_item_serendipity", false]], "user_serendipity() (in module recommenders.evaluation.python_evaluation)": [[1, "recommenders.evaluation.python_evaluation.user_serendipity", false]], "user_serendipity() (recommenders.evaluation.spark_evaluation.sparkdiversityevaluation method)": [[1, "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation.user_serendipity", false]], "user_test (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.user_test", false]], "user_train (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.user_train", false]], "user_valid (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.user_valid", false]], "usernum (recommenders.models.sasrec.sampler.warpsampler attribute)": [[3, "recommenders.models.sasrec.sampler.WarpSampler.usernum", false]], "usernum (recommenders.models.sasrec.util.sasrecdataset attribute)": [[3, "recommenders.models.sasrec.util.SASRecDataSet.usernum", false]], "values() (recommenders.models.deeprec.deeprec_utils.hparams method)": [[3, "recommenders.models.deeprec.deeprec_utils.HParams.values", false]], "vw (class in recommenders.models.vowpal_wabbit.vw)": [[3, "recommenders.models.vowpal_wabbit.vw.VW", false]], "warpsampler (class in recommenders.models.sasrec.sampler)": [[3, "recommenders.models.sasrec.sampler.WarpSampler", false]], "watch_memory() (in module recommenders.utils.notebook_memory_management)": [[5, "recommenders.utils.notebook_memory_management.watch_memory", false]], "word2vec_embedding (recommenders.models.newsrec.models.lstur.lsturmodel attribute)": [[3, "recommenders.models.newsrec.models.lstur.LSTURModel.word2vec_embedding", false]], "word2vec_embedding (recommenders.models.newsrec.models.naml.namlmodel attribute)": [[3, "recommenders.models.newsrec.models.naml.NAMLModel.word2vec_embedding", false]], "word2vec_embedding (recommenders.models.newsrec.models.npa.npamodel attribute)": [[3, "recommenders.models.newsrec.models.npa.NPAModel.word2vec_embedding", false]], "word2vec_embedding (recommenders.models.newsrec.models.nrms.nrmsmodel attribute)": [[3, "recommenders.models.newsrec.models.nrms.NRMSModel.word2vec_embedding", false]], "word_tokenize() (in module recommenders.datasets.mind)": [[0, "recommenders.datasets.mind.word_tokenize", false]], "word_tokenize() (in module recommenders.models.newsrec.newsrec_utils)": [[3, "recommenders.models.newsrec.newsrec_utils.word_tokenize", false]], "xdeepfmmodel (class in recommenders.models.deeprec.models.xdeepfm)": [[3, "recommenders.models.deeprec.models.xDeepFM.XDeepFMModel", false]]}, "objects": {"recommenders.datasets": [[0, 0, 0, "-", "amazon_reviews"], [0, 0, 0, "-", "covid_utils"], [0, 0, 0, "-", "criteo"], [0, 0, 0, "-", "download_utils"], [0, 0, 0, "-", "mind"], [0, 0, 0, "-", "movielens"], [0, 0, 0, "-", "pandas_df_utils"], [0, 0, 0, "-", "python_splitters"], [0, 0, 0, "-", "spark_splitters"], [0, 0, 0, "-", "sparse"], [0, 0, 0, "-", "split_utils"], [0, 0, 0, "-", "wikidata"]], "recommenders.datasets.amazon_reviews": [[0, 1, 1, "", "data_preprocessing"], [0, 1, 1, "", "download_and_extract"], [0, 1, 1, "", "get_review_data"]], "recommenders.datasets.covid_utils": [[0, 1, 1, "", "clean_dataframe"], [0, 1, 1, "", "get_public_domain_text"], [0, 1, 1, "", "load_pandas_df"], [0, 1, 1, "", "remove_duplicates"], [0, 1, 1, "", "remove_nan"], [0, 1, 1, "", "retrieve_text"]], "recommenders.datasets.criteo": [[0, 1, 1, "", "download_criteo"], [0, 1, 1, "", "extract_criteo"], [0, 1, 1, "", "get_spark_schema"], [0, 1, 1, "", "load_pandas_df"], [0, 1, 1, "", "load_spark_df"]], "recommenders.datasets.download_utils": [[0, 1, 1, "", "download_path"], [0, 1, 1, "", "maybe_download"], [0, 1, 1, "", "unzip_file"]], "recommenders.datasets.mind": [[0, 1, 1, "", "download_and_extract_glove"], [0, 1, 1, "", "download_mind"], [0, 1, 1, "", "extract_mind"], [0, 1, 1, "", "generate_embeddings"], [0, 1, 1, "", "get_train_input"], [0, 1, 1, "", "get_user_history"], [0, 1, 1, "", "get_valid_input"], [0, 1, 1, "", "get_words_and_entities"], [0, 1, 1, "", "load_glove_matrix"], [0, 1, 1, "", "read_clickhistory"], [0, 1, 1, "", "word_tokenize"]], "recommenders.datasets.movielens": [[0, 2, 1, "", "MockMovielensSchema"], [0, 1, 1, "", "download_movielens"], [0, 1, 1, "", "extract_movielens"], [0, 1, 1, "", "load_item_df"], [0, 1, 1, "", "load_pandas_df"], [0, 1, 1, "", "load_spark_df"]], "recommenders.datasets.movielens.MockMovielensSchema": [[0, 2, 1, "", "Config"], [0, 4, 1, "", "get_df"], [0, 4, 1, "", "get_spark_df"]], "recommenders.datasets.movielens.MockMovielensSchema.Config": [[0, 3, 1, "", "name"]], "recommenders.datasets.pandas_df_utils": [[0, 2, 1, "", "LibffmConverter"], [0, 2, 1, "", "PandasHash"], [0, 1, 1, "", "filter_by"], [0, 1, 1, "", "has_columns"], [0, 1, 1, "", "has_same_base_dtype"], [0, 1, 1, "", "lru_cache_df"], [0, 1, 1, "", "negative_feedback_sampler"], [0, 1, 1, "", "user_item_pairs"]], "recommenders.datasets.pandas_df_utils.LibffmConverter": [[0, 3, 1, "", "feature_count"], [0, 3, 1, "", "field_count"], [0, 3, 1, "", "filepath"], [0, 4, 1, "", "fit"], [0, 4, 1, "", "fit_transform"], [0, 4, 1, "", "get_params"], [0, 4, 1, "", "transform"]], "recommenders.datasets.python_splitters": [[0, 1, 1, "", "numpy_stratified_split"], [0, 1, 1, "", "python_chrono_split"], [0, 1, 1, "", "python_random_split"], [0, 1, 1, "", "python_stratified_split"]], "recommenders.datasets.spark_splitters": [[0, 1, 1, "", "spark_chrono_split"], [0, 1, 1, "", "spark_random_split"], [0, 1, 1, "", "spark_stratified_split"], [0, 1, 1, "", "spark_timestamp_split"]], "recommenders.datasets.sparse": [[0, 2, 1, "", "AffinityMatrix"]], "recommenders.datasets.sparse.AffinityMatrix": [[0, 4, 1, "", "gen_affinity_matrix"], [0, 4, 1, "", "map_back_sparse"]], "recommenders.datasets.split_utils": [[0, 1, 1, "", "filter_k_core"], [0, 1, 1, "", "min_rating_filter_pandas"], [0, 1, 1, "", "min_rating_filter_spark"], [0, 1, 1, "", "process_split_ratio"], [0, 1, 1, "", "split_pandas_data_with_ratios"]], "recommenders.datasets.wikidata": [[0, 1, 1, "", "get_session"], [0, 1, 1, "", "log_retries"], [0, 1, 1, "", "read_linked_entities"], [0, 1, 1, "", "search_wikidata"]], "recommenders.evaluation": [[1, 0, 0, "-", "python_evaluation"], [1, 0, 0, "-", "spark_evaluation"]], "recommenders.evaluation.python_evaluation": [[1, 5, 1, "", "ColumnMismatchError"], [1, 5, 1, "", "ColumnTypeMismatchError"], [1, 1, 1, "", "auc"], [1, 1, 1, "", "catalog_coverage"], [1, 1, 1, "", "distributional_coverage"], [1, 1, 1, "", "diversity"], [1, 1, 1, "", "exp_var"], [1, 1, 1, "", "get_top_k_items"], [1, 1, 1, "", "historical_item_novelty"], [1, 1, 1, "", "logloss"], [1, 1, 1, "", "mae"], [1, 1, 1, "", "map"], [1, 1, 1, "", "map_at_k"], [1, 1, 1, "", "merge_ranking_true_pred"], [1, 1, 1, "", "merge_rating_true_pred"], [1, 1, 1, "", "ndcg_at_k"], [1, 1, 1, "", "novelty"], [1, 1, 1, "", "precision_at_k"], [1, 1, 1, "", "r_precision_at_k"], [1, 1, 1, "", "recall_at_k"], [1, 1, 1, "", "rmse"], [1, 1, 1, "", "rsquared"], [1, 1, 1, "", "serendipity"], [1, 1, 1, "", "user_diversity"], [1, 1, 1, "", "user_item_serendipity"], [1, 1, 1, "", "user_serendipity"]], "recommenders.evaluation.python_evaluation.ColumnMismatchError": [[1, 3, 1, "", "message"]], "recommenders.evaluation.python_evaluation.ColumnTypeMismatchError": [[1, 3, 1, "", "message"]], "recommenders.evaluation.spark_evaluation": [[1, 2, 1, "", "SparkDiversityEvaluation"], [1, 2, 1, "", "SparkRankingEvaluation"], [1, 2, 1, "", "SparkRatingEvaluation"]], "recommenders.evaluation.spark_evaluation.SparkDiversityEvaluation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "catalog_coverage"], [1, 4, 1, "", "distributional_coverage"], [1, 4, 1, "", "diversity"], [1, 4, 1, "", "historical_item_novelty"], [1, 4, 1, "", "novelty"], [1, 4, 1, "", "serendipity"], [1, 4, 1, "", "user_diversity"], [1, 4, 1, "", "user_item_serendipity"], [1, 4, 1, "", "user_serendipity"]], "recommenders.evaluation.spark_evaluation.SparkRankingEvaluation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "map"], [1, 4, 1, "", "map_at_k"], [1, 4, 1, "", "ndcg_at_k"], [1, 4, 1, "", "precision_at_k"], [1, 4, 1, "", "recall_at_k"]], "recommenders.evaluation.spark_evaluation.SparkRatingEvaluation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "exp_var"], [1, 4, 1, "", "mae"], [1, 4, 1, "", "rmse"], [1, 4, 1, "", "rsquared"]], "recommenders.models.cornac": [[3, 0, 0, "-", "cornac_utils"]], "recommenders.models.cornac.cornac_utils": [[3, 1, 1, "", "predict"], [3, 1, 1, "", "predict_ranking"]], "recommenders.models.deeprec": [[3, 0, 0, "-", "deeprec_utils"]], "recommenders.models.deeprec.DataModel": [[3, 0, 0, "-", "ImplicitCF"]], "recommenders.models.deeprec.DataModel.ImplicitCF": [[3, 2, 1, "", "ImplicitCF"]], "recommenders.models.deeprec.DataModel.ImplicitCF.ImplicitCF": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "create_norm_adj_mat"], [3, 4, 1, "", "get_norm_adj_mat"], [3, 4, 1, "", "train_loader"]], "recommenders.models.deeprec.deeprec_utils": [[3, 2, 1, "", "HParams"], [3, 1, 1, "", "cal_metric"], [3, 1, 1, "", "check_nn_config"], [3, 1, 1, "", "check_type"], [3, 1, 1, "", "create_hparams"], [3, 1, 1, "", "dcg_score"], [3, 1, 1, "", "download_deeprec_resources"], [3, 1, 1, "", "flat_config"], [3, 1, 1, "", "hit_score"], [3, 1, 1, "", "load_dict"], [3, 1, 1, "", "load_yaml"], [3, 1, 1, "", "mrr_score"], [3, 1, 1, "", "ndcg_score"], [3, 1, 1, "", "prepare_hparams"]], "recommenders.models.deeprec.deeprec_utils.HParams": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "__repr__"], [3, 4, 1, "", "values"]], "recommenders.models.deeprec.io": [[3, 0, 0, "-", "dkn_item2item_iterator"], [3, 0, 0, "-", "dkn_iterator"], [3, 0, 0, "-", "iterator"], [3, 0, 0, "-", "nextitnet_iterator"], [3, 0, 0, "-", "sequential_iterator"]], "recommenders.models.deeprec.io.dkn_item2item_iterator": [[3, 2, 1, "", "DKNItem2itemTextIterator"]], "recommenders.models.deeprec.io.dkn_item2item_iterator.DKNItem2itemTextIterator": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "load_data_from_file"]], "recommenders.models.deeprec.io.dkn_iterator": [[3, 2, 1, "", "DKNTextIterator"]], "recommenders.models.deeprec.io.dkn_iterator.DKNTextIterator": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "gen_feed_dict"], [3, 4, 1, "", "gen_infer_feed_dict"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "load_infer_data_from_file"], [3, 4, 1, "", "parser_one_line"]], "recommenders.models.deeprec.io.iterator": [[3, 2, 1, "", "BaseIterator"], [3, 2, 1, "", "FFMTextIterator"]], "recommenders.models.deeprec.io.iterator.BaseIterator": [[3, 4, 1, "", "gen_feed_dict"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "parser_one_line"]], "recommenders.models.deeprec.io.iterator.FFMTextIterator": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "gen_feed_dict"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "parser_one_line"]], "recommenders.models.deeprec.io.nextitnet_iterator": [[3, 2, 1, "", "NextItNetIterator"]], "recommenders.models.deeprec.io.nextitnet_iterator.NextItNetIterator": [[3, 4, 1, "", "__init__"]], "recommenders.models.deeprec.io.sequential_iterator": [[3, 2, 1, "", "SequentialIterator"]], "recommenders.models.deeprec.io.sequential_iterator.SequentialIterator": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "gen_feed_dict"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "parse_file"], [3, 4, 1, "", "parser_one_line"]], "recommenders.models.deeprec.models": [[3, 0, 0, "-", "base_model"], [3, 0, 0, "-", "dkn"], [3, 0, 0, "-", "dkn_item2item"], [3, 0, 0, "-", "xDeepFM"]], "recommenders.models.deeprec.models.base_model": [[3, 2, 1, "", "BaseModel"]], "recommenders.models.deeprec.models.base_model.BaseModel": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "eval"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "group_labels"], [3, 4, 1, "", "infer"], [3, 4, 1, "", "load_model"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "run_eval"], [3, 4, 1, "", "train"]], "recommenders.models.deeprec.models.dkn": [[3, 2, 1, "", "DKN"]], "recommenders.models.deeprec.models.dkn.DKN": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "infer_embedding"], [3, 4, 1, "", "run_get_embedding"]], "recommenders.models.deeprec.models.dkn_item2item": [[3, 2, 1, "", "DKNItem2Item"]], "recommenders.models.deeprec.models.dkn_item2item.DKNItem2Item": [[3, 4, 1, "", "eval"], [3, 4, 1, "", "run_eval"]], "recommenders.models.deeprec.models.graphrec": [[3, 0, 0, "-", "lightgcn"]], "recommenders.models.deeprec.models.graphrec.lightgcn": [[3, 2, 1, "", "LightGCN"]], "recommenders.models.deeprec.models.graphrec.lightgcn.LightGCN": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "infer_embedding"], [3, 4, 1, "", "load"], [3, 4, 1, "", "recommend_k_items"], [3, 4, 1, "", "run_eval"], [3, 4, 1, "", "score"]], "recommenders.models.deeprec.models.sequential": [[3, 0, 0, "-", "asvd"], [3, 0, 0, "-", "caser"], [3, 0, 0, "-", "nextitnet"], [3, 0, 0, "-", "rnn_cell_implement"], [3, 0, 0, "-", "sequential_base_model"], [3, 0, 0, "-", "sli_rec"]], "recommenders.models.deeprec.models.sequential.asvd": [[3, 2, 1, "", "A2SVDModel"]], "recommenders.models.deeprec.models.sequential.caser": [[3, 2, 1, "", "CaserModel"]], "recommenders.models.deeprec.models.sequential.caser.CaserModel": [[3, 4, 1, "", "__init__"]], "recommenders.models.deeprec.models.sequential.nextitnet": [[3, 2, 1, "", "NextItNetModel"]], "recommenders.models.deeprec.models.sequential.rnn_cell_implement": [[3, 2, 1, "", "Time4ALSTMCell"], [3, 2, 1, "", "Time4LSTMCell"]], "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4ALSTMCell": [[3, 4, 1, "", "call"], [3, 6, 1, "", "output_size"], [3, 6, 1, "", "state_size"]], "recommenders.models.deeprec.models.sequential.rnn_cell_implement.Time4LSTMCell": [[3, 4, 1, "", "call"], [3, 6, 1, "", "output_size"], [3, 6, 1, "", "state_size"]], "recommenders.models.deeprec.models.sequential.sequential_base_model": [[3, 2, 1, "", "SequentialBaseModel"]], "recommenders.models.deeprec.models.sequential.sequential_base_model.SequentialBaseModel": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "run_eval"]], "recommenders.models.deeprec.models.sequential.sli_rec": [[3, 2, 1, "", "SLI_RECModel"]], "recommenders.models.deeprec.models.xDeepFM": [[3, 2, 1, "", "XDeepFMModel"]], "recommenders.models.fastai": [[3, 0, 0, "-", "fastai_utils"]], "recommenders.models.fastai.fastai_utils": [[3, 1, 1, "", "cartesian_product"], [3, 1, 1, "", "hide_fastai_progress_bar"], [3, 1, 1, "", "score"]], "recommenders.models.lightfm": [[3, 0, 0, "-", "lightfm_utils"]], "recommenders.models.lightfm.lightfm_utils": [[3, 1, 1, "", "compare_metric"], [3, 1, 1, "", "model_perf_plots"], [3, 1, 1, "", "prepare_all_predictions"], [3, 1, 1, "", "prepare_test_df"], [3, 1, 1, "", "similar_items"], [3, 1, 1, "", "similar_users"], [3, 1, 1, "", "track_model_metrics"]], "recommenders.models.lightgbm": [[3, 0, 0, "-", "lightgbm_utils"]], "recommenders.models.lightgbm.lightgbm_utils": [[3, 2, 1, "", "NumEncoder"], [3, 1, 1, "", "unpackbits"]], "recommenders.models.lightgbm.lightgbm_utils.NumEncoder": [[3, 4, 1, "", "fit_transform"], [3, 4, 1, "", "transform"]], "recommenders.models.ncf": [[3, 0, 0, "-", "dataset"], [3, 0, 0, "-", "ncf_singlenode"]], "recommenders.models.ncf.dataset": [[3, 2, 1, "", "DataFile"], [3, 2, 1, "", "Dataset"], [3, 5, 1, "", "EmptyFileException"], [3, 5, 1, "", "FileNotSortedException"], [3, 5, 1, "", "MissingFieldsException"], [3, 5, 1, "", "MissingUserException"], [3, 2, 1, "", "NegativeSampler"]], "recommenders.models.ncf.dataset.DataFile": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "load_data"]], "recommenders.models.ncf.dataset.Dataset": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "test_loader"], [3, 4, 1, "", "train_loader"]], "recommenders.models.ncf.dataset.NegativeSampler": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "sample"]], "recommenders.models.ncf.ncf_singlenode": [[3, 2, 1, "", "NCF"]], "recommenders.models.ncf.ncf_singlenode.NCF": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "load"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "save"]], "recommenders.models.newsrec": [[3, 0, 0, "-", "newsrec_utils"]], "recommenders.models.newsrec.io": [[3, 0, 0, "-", "mind_all_iterator"], [3, 0, 0, "-", "mind_iterator"]], "recommenders.models.newsrec.io.mind_all_iterator": [[3, 2, 1, "", "MINDAllIterator"]], "recommenders.models.newsrec.io.mind_all_iterator.MINDAllIterator": [[3, 3, 1, "", "ID_spliter"], [3, 4, 1, "", "__init__"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "body_size"], [3, 3, 1, "", "col_spliter"], [3, 3, 1, "", "his_size"], [3, 4, 1, "", "init_behaviors"], [3, 4, 1, "", "init_news"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "load_dict"], [3, 4, 1, "", "load_impression_from_file"], [3, 4, 1, "", "load_news_from_file"], [3, 4, 1, "", "load_user_from_file"], [3, 3, 1, "", "npratio"], [3, 4, 1, "", "parser_one_line"], [3, 3, 1, "", "title_size"]], "recommenders.models.newsrec.io.mind_iterator": [[3, 2, 1, "", "MINDIterator"]], "recommenders.models.newsrec.io.mind_iterator.MINDIterator": [[3, 3, 1, "", "ID_spliter"], [3, 4, 1, "", "__init__"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "col_spliter"], [3, 3, 1, "", "his_size"], [3, 4, 1, "", "init_behaviors"], [3, 4, 1, "", "init_news"], [3, 4, 1, "", "load_data_from_file"], [3, 4, 1, "", "load_dict"], [3, 4, 1, "", "load_impression_from_file"], [3, 4, 1, "", "load_news_from_file"], [3, 4, 1, "", "load_user_from_file"], [3, 3, 1, "", "npratio"], [3, 4, 1, "", "parser_one_line"], [3, 3, 1, "", "title_size"]], "recommenders.models.newsrec.models": [[3, 0, 0, "-", "base_model"], [3, 0, 0, "-", "layers"], [3, 0, 0, "-", "lstur"], [3, 0, 0, "-", "naml"], [3, 0, 0, "-", "npa"], [3, 0, 0, "-", "nrms"]], "recommenders.models.newsrec.models.base_model": [[3, 2, 1, "", "BaseModel"]], "recommenders.models.newsrec.models.base_model.BaseModel": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "eval"], [3, 4, 1, "", "fit"], [3, 3, 1, "", "graph"], [3, 4, 1, "", "group_labels"], [3, 3, 1, "", "hparams"], [3, 4, 1, "", "run_eval"], [3, 3, 1, "", "seed"], [3, 3, 1, "", "test_iterator"], [3, 4, 1, "", "train"], [3, 3, 1, "", "train_iterator"]], "recommenders.models.newsrec.models.layers": [[3, 2, 1, "", "AttLayer2"], [3, 2, 1, "", "ComputeMasking"], [3, 2, 1, "", "OverwriteMasking"], [3, 1, 1, "", "PersonalizedAttentivePooling"], [3, 2, 1, "", "SelfAttention"], [3, 3, 1, "", "dim1"], [3, 3, 1, "", "dim2"], [3, 3, 1, "", "dim3"]], "recommenders.models.newsrec.models.layers.AttLayer2": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "build"], [3, 4, 1, "", "call"], [3, 4, 1, "", "compute_mask"], [3, 4, 1, "", "compute_output_shape"], [3, 3, 1, "", "dim"]], "recommenders.models.newsrec.models.layers.ComputeMasking": [[3, 4, 1, "", "call"], [3, 4, 1, "", "compute_output_shape"]], "recommenders.models.newsrec.models.layers.OverwriteMasking": [[3, 4, 1, "", "build"], [3, 4, 1, "", "call"], [3, 4, 1, "", "compute_output_shape"]], "recommenders.models.newsrec.models.layers.SelfAttention": [[3, 4, 1, "", "Mask"], [3, 4, 1, "", "__init__"], [3, 4, 1, "", "build"], [3, 4, 1, "", "call"], [3, 4, 1, "", "compute_output_shape"], [3, 4, 1, "", "get_config"]], "recommenders.models.newsrec.models.lstur": [[3, 2, 1, "", "LSTURModel"]], "recommenders.models.newsrec.models.lstur.LSTURModel": [[3, 4, 1, "", "__init__"], [3, 3, 1, "", "hparam"], [3, 3, 1, "", "word2vec_embedding"]], "recommenders.models.newsrec.models.naml": [[3, 2, 1, "", "NAMLModel"]], "recommenders.models.newsrec.models.naml.NAMLModel": [[3, 4, 1, "", "__init__"], [3, 3, 1, "", "hparam"], [3, 3, 1, "", "word2vec_embedding"]], "recommenders.models.newsrec.models.npa": [[3, 2, 1, "", "NPAModel"]], "recommenders.models.newsrec.models.npa.NPAModel": [[3, 4, 1, "", "__init__"], [3, 3, 1, "", "hparam"], [3, 3, 1, "", "word2vec_embedding"]], "recommenders.models.newsrec.models.nrms": [[3, 2, 1, "", "NRMSModel"]], "recommenders.models.newsrec.models.nrms.NRMSModel": [[3, 4, 1, "", "__init__"], [3, 3, 1, "", "hparam"], [3, 3, 1, "", "word2vec_embedding"]], "recommenders.models.newsrec.newsrec_utils": [[3, 1, 1, "", "check_nn_config"], [3, 1, 1, "", "check_type"], [3, 1, 1, "", "create_hparams"], [3, 1, 1, "", "get_mind_data_set"], [3, 1, 1, "", "newsample"], [3, 1, 1, "", "prepare_hparams"], [3, 1, 1, "", "word_tokenize"]], "recommenders.models.rbm": [[3, 0, 0, "-", "rbm"]], "recommenders.models.rbm.rbm": [[3, 2, 1, "", "RBM"]], "recommenders.models.rbm.rbm.RBM": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "batch_training"], [3, 4, 1, "", "binomial_sampling"], [3, 4, 1, "", "data_pipeline"], [3, 4, 1, "", "eval_out"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "free_energy"], [3, 4, 1, "", "generate_graph"], [3, 4, 1, "", "gibbs_protocol"], [3, 4, 1, "", "gibbs_sampling"], [3, 4, 1, "", "init_gpu"], [3, 4, 1, "", "init_metrics"], [3, 4, 1, "", "init_parameters"], [3, 4, 1, "", "init_training_session"], [3, 4, 1, "", "load"], [3, 4, 1, "", "losses"], [3, 4, 1, "", "multinomial_distribution"], [3, 4, 1, "", "multinomial_sampling"], [3, 4, 1, "", "placeholder"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "recommend_k_items"], [3, 4, 1, "", "sample_hidden_units"], [3, 4, 1, "", "sample_visible_units"], [3, 4, 1, "", "save"]], "recommenders.models.sar": [[3, 0, 0, "-", "sar_singlenode"]], "recommenders.models.sar.sar_singlenode": [[3, 2, 1, "", "SARSingleNode"]], "recommenders.models.sar.sar_singlenode.SARSingleNode": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "compute_affinity_matrix"], [3, 4, 1, "", "compute_cooccurrence_matrix"], [3, 4, 1, "", "compute_time_decay"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "get_item_based_topk"], [3, 4, 1, "", "get_popularity_based_topk"], [3, 4, 1, "", "get_topk_most_similar_users"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "recommend_k_items"], [3, 4, 1, "", "score"], [3, 4, 1, "", "set_index"]], "recommenders.models.sasrec": [[3, 0, 0, "-", "model"], [3, 0, 0, "-", "sampler"], [3, 0, 0, "-", "ssept"], [3, 0, 0, "-", "util"]], "recommenders.models.sasrec.model": [[3, 2, 1, "", "Encoder"], [3, 2, 1, "", "EncoderLayer"], [3, 2, 1, "", "LayerNormalization"], [3, 2, 1, "", "MultiHeadAttention"], [3, 2, 1, "", "PointWiseFeedForward"], [3, 2, 1, "", "SASREC"]], "recommenders.models.sasrec.model.Encoder": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"]], "recommenders.models.sasrec.model.EncoderLayer": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"], [3, 4, 1, "", "call_"]], "recommenders.models.sasrec.model.LayerNormalization": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"]], "recommenders.models.sasrec.model.MultiHeadAttention": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"]], "recommenders.models.sasrec.model.PointWiseFeedForward": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"]], "recommenders.models.sasrec.model.SASREC": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"], [3, 4, 1, "", "create_combined_dataset"], [3, 4, 1, "", "embedding"], [3, 4, 1, "", "evaluate"], [3, 4, 1, "", "evaluate_valid"], [3, 4, 1, "", "loss_function"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "train"]], "recommenders.models.sasrec.sampler": [[3, 2, 1, "", "WarpSampler"], [3, 1, 1, "", "sample_function"]], "recommenders.models.sasrec.sampler.WarpSampler": [[3, 3, 1, "", "User"], [3, 4, 1, "", "__init__"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "itemnum"], [3, 3, 1, "", "maxlen"], [3, 3, 1, "", "n_workers"], [3, 3, 1, "", "usernum"]], "recommenders.models.sasrec.ssept": [[3, 2, 1, "", "SSEPT"]], "recommenders.models.sasrec.ssept.SSEPT": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "call"], [3, 4, 1, "", "loss_function"], [3, 4, 1, "", "predict"]], "recommenders.models.sasrec.util": [[3, 2, 1, "", "SASRecDataSet"]], "recommenders.models.sasrec.util.SASRecDataSet": [[3, 3, 1, "", "Items"], [3, 3, 1, "", "User"], [3, 3, 1, "", "col_sep"], [3, 3, 1, "", "filename"], [3, 3, 1, "", "itemnum"], [3, 3, 1, "", "user_test"], [3, 3, 1, "", "user_train"], [3, 3, 1, "", "user_valid"], [3, 3, 1, "", "usernum"]], "recommenders.models.surprise": [[3, 0, 0, "-", "surprise_utils"]], "recommenders.models.surprise.surprise_utils": [[3, 1, 1, "", "compute_ranking_predictions"], [3, 1, 1, "", "predict"], [3, 1, 1, "", "surprise_trainset_to_df"]], "recommenders.models.tfidf": [[3, 0, 0, "-", "tfidf_utils"]], "recommenders.models.tfidf.tfidf_utils": [[3, 2, 1, "", "TfidfRecommender"]], "recommenders.models.tfidf.tfidf_utils.TfidfRecommender": [[3, 4, 1, "", "clean_dataframe"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "get_stop_words"], [3, 4, 1, "", "get_tokens"], [3, 4, 1, "", "get_top_k_recommendations"], [3, 4, 1, "", "recommend_top_k_items"], [3, 4, 1, "", "tokenize_text"]], "recommenders.models.vae": [[3, 0, 0, "-", "multinomial_vae"], [3, 0, 0, "-", "standard_vae"]], "recommenders.models.vae.multinomial_vae": [[3, 2, 1, "", "AnnealingCallback"], [3, 2, 1, "", "LossHistory"], [3, 2, 1, "", "Metrics"], [3, 2, 1, "", "Mult_VAE"]], "recommenders.models.vae.multinomial_vae.AnnealingCallback": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "get_data"], [3, 4, 1, "", "on_batch_end"], [3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"]], "recommenders.models.vae.multinomial_vae.LossHistory": [[3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"]], "recommenders.models.vae.multinomial_vae.Metrics": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "get_data"], [3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"], [3, 4, 1, "", "recommend_k_items"]], "recommenders.models.vae.multinomial_vae.Mult_VAE": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "display_metrics"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "get_optimal_beta"], [3, 4, 1, "", "ndcg_per_epoch"], [3, 4, 1, "", "nn_batch_generator"], [3, 4, 1, "", "recommend_k_items"]], "recommenders.models.vae.standard_vae": [[3, 2, 1, "", "AnnealingCallback"], [3, 2, 1, "", "LossHistory"], [3, 2, 1, "", "Metrics"], [3, 2, 1, "", "StandardVAE"]], "recommenders.models.vae.standard_vae.AnnealingCallback": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "get_data"], [3, 4, 1, "", "on_batch_end"], [3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"]], "recommenders.models.vae.standard_vae.LossHistory": [[3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"]], "recommenders.models.vae.standard_vae.Metrics": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "get_data"], [3, 4, 1, "", "on_epoch_end"], [3, 4, 1, "", "on_train_begin"], [3, 4, 1, "", "recommend_k_items"]], "recommenders.models.vae.standard_vae.StandardVAE": [[3, 4, 1, "", "__init__"], [3, 4, 1, "", "display_metrics"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "get_optimal_beta"], [3, 4, 1, "", "ndcg_per_epoch"], [3, 4, 1, "", "nn_batch_generator"], [3, 4, 1, "", "recommend_k_items"]], "recommenders.models.vowpal_wabbit": [[3, 0, 0, "-", "vw"]], "recommenders.models.vowpal_wabbit.vw": [[3, 2, 1, "", "VW"]], "recommenders.models.vowpal_wabbit.vw.VW": [[3, 4, 1, "", "fit"], [3, 4, 1, "", "parse_test_params"], [3, 4, 1, "", "parse_train_params"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "to_vw_cmd"], [3, 4, 1, "", "to_vw_file"]], "recommenders.models.wide_deep": [[3, 0, 0, "-", "wide_deep_utils"]], "recommenders.models.wide_deep.wide_deep_utils": [[3, 1, 1, "", "build_feature_columns"], [3, 1, 1, "", "build_model"]], "recommenders.tuning": [[4, 0, 0, "-", "parameter_sweep"]], "recommenders.tuning.parameter_sweep": [[4, 1, 1, "", "generate_param_grid"]], "recommenders.utils": [[5, 0, 0, "-", "general_utils"], [5, 0, 0, "-", "gpu_utils"], [5, 0, 0, "-", "k8s_utils"], [5, 0, 0, "-", "notebook_memory_management"], [5, 0, 0, "-", "notebook_utils"], [5, 0, 0, "-", "plot"], [5, 0, 0, "-", "python_utils"], [5, 0, 0, "-", "spark_utils"], [5, 0, 0, "-", "tf_utils"], [5, 0, 0, "-", "timer"]], "recommenders.utils.general_utils": [[5, 1, 1, "", "get_number_processors"], [5, 1, 1, "", "get_physical_memory"], [5, 1, 1, "", "invert_dictionary"]], "recommenders.utils.gpu_utils": [[5, 1, 1, "", "clear_memory_all_gpus"], [5, 1, 1, "", "get_cuda_version"], [5, 1, 1, "", "get_cudnn_version"], [5, 1, 1, "", "get_gpu_info"], [5, 1, 1, "", "get_number_gpus"]], "recommenders.utils.k8s_utils": [[5, 1, 1, "", "nodes_to_replicas"], [5, 1, 1, "", "qps_to_replicas"], [5, 1, 1, "", "replicas_to_qps"]], "recommenders.utils.notebook_memory_management": [[5, 1, 1, "", "pre_run_cell"], [5, 1, 1, "", "start_watching_memory"], [5, 1, 1, "", "stop_watching_memory"], [5, 1, 1, "", "watch_memory"]], "recommenders.utils.notebook_utils": [[5, 1, 1, "", "execute_notebook"], [5, 1, 1, "", "is_databricks"], [5, 1, 1, "", "is_jupyter"], [5, 1, 1, "", "read_notebook"], [5, 1, 1, "", "store_metadata"]], "recommenders.utils.plot": [[5, 1, 1, "", "line_graph"]], "recommenders.utils.python_utils": [[5, 1, 1, "", "binarize"], [5, 1, 1, "", "cosine_similarity"], [5, 1, 1, "", "exponential_decay"], [5, 1, 1, "", "get_top_k_scored_items"], [5, 1, 1, "", "inclusion_index"], [5, 1, 1, "", "jaccard"], [5, 1, 1, "", "lexicographers_mutual_information"], [5, 1, 1, "", "lift"], [5, 1, 1, "", "mutual_information"], [5, 1, 1, "", "rescale"]], "recommenders.utils.spark_utils": [[5, 1, 1, "", "start_or_get_spark"]], "recommenders.utils.tf_utils": [[5, 2, 1, "", "MetricsLogger"], [5, 1, 1, "", "build_optimizer"], [5, 1, 1, "", "evaluation_log_hook"], [5, 1, 1, "", "export_model"], [5, 1, 1, "", "pandas_input_fn"], [5, 1, 1, "", "pandas_input_fn_for_saved_model"]], "recommenders.utils.tf_utils.MetricsLogger": [[5, 4, 1, "", "__init__"], [5, 4, 1, "", "get_log"], [5, 4, 1, "", "log"]], "recommenders.utils.timer": [[5, 2, 1, "", "Timer"]], "recommenders.utils.timer.Timer": [[5, 4, 1, "", "__init__"], [5, 6, 1, "", "interval"], [5, 4, 1, "", "start"], [5, 4, 1, "", "stop"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception", "6": "py:property"}, "terms": {"": [0, 1, 3, 5], "0": [0, 1, 3, 5], "000": 0, "001": 5, "004": 3, "005": 3, "01": 0, "02126": 3, "05814": 3, "1": [0, 1, 3, 5], "10": [0, 1, 3], "100": [0, 3], "1000": [0, 3], "10000": [0, 3, 5], "100k": 0, "10g": 5, "10m": 0, "1145": 0, "12": 0, "128": [3, 5], "13": 0, "138000": 0, "14th": 3, "15": 0, "16": 3, "160k": 0, "1700": 0, "173": 3, "18": [0, 3], "1802": 3, "182": 3, "19": 3, "1998": 0, "1d": 5, "1m": 0, "2": [0, 1, 3, 5], "20": [0, 3], "200": 3, "2002": 3, "2008": 3, "2010": 1, "2011": 1, "2012": 1, "2013": 0, "2015": 0, "2017": 3, "2018": 3, "2019": 3, "2020": [0, 1, 3], "20m": 0, "21": 1, "2200": 5, "24": 0, "244": 3, "24th": 3, "25": 0, "256": 5, "257": 1, "26": 0, "26th": 3, "27000": 0, "2827872": 0, "28th": 3, "297": 1, "2d": [3, 5], "3": [0, 1, 3, 5], "30": 3, "32": 0, "35": 0, "36": 0, "4": [0, 3], "40": 0, "400": 3, "4000": 0, "4026": 3, "42": [0, 3], "4213": 3, "4219": 3, "426": 3, "434": 3, "47": 0, "4953": 3, "5": [0, 1, 3, 5], "50": 3, "500": 3, "5000": 0, "5346": 3, "6": [0, 1, 3], "6000": 0, "64": 3, "7": [0, 3, 5], "70": 3, "72000": 0, "75": 0, "8": [0, 3], "80": 3, "8096": 3, "9": 0, "90": 3, "99": 3, "9th": 3, "A": [0, 1, 3, 4, 5], "As": [0, 1, 3], "At": 3, "By": 3, "For": [0, 3, 5], "If": [0, 1, 3, 5], "In": [0, 1, 3, 5], "It": [0, 1, 3], "Its": 1, "On": 0, "One": [0, 3], "That": 0, "The": [0, 1, 2, 3, 5], "There": [0, 1, 3], "These": [0, 1], "To": [0, 3], "With": 1, "_": 1, "__init__": [1, 3, 5], "__repr__": 3, "_beta": 3, "_featur": 3, "_field": 3, "a2svdmodel": 3, "aaai": 3, "about": 0, "abov": [0, 1], "absolut": 1, "abstract": [0, 3], "acc": 3, "accept": 0, "access": 3, "accord": [0, 3], "accordingli": [0, 3], "account": 0, "accur": 0, "accuraci": 1, "accurari": 3, "achiev": 1, "acl": [0, 3], "acm": [0, 3], "across": [0, 1, 3], "activ": [1, 3], "actual": [0, 1], "ad": [0, 3], "adadelta": 5, "adagrad": [3, 5], "adam": 5, "adapt": 3, "add": [3, 5], "addition": 3, "address": 3, "adj_dir": 3, "adjac": 3, "advanc": 0, "advertis": 0, "affect": 5, "affin": [0, 3], "affinitymatrix": [0, 3], "after": [0, 3], "again": 1, "against": 0, "ai": [0, 2], "ak": 5, "akswebservic": 5, "al": [1, 2, 3], "algo": 3, "algo_bas": 3, "algobas": 3, "algorithm": 2, "align": 3, "all": [0, 1, 3, 5], "allen": 0, "allow": [0, 3], "along": 0, "alpha": 3, "alreadi": [0, 1, 3], "also": [1, 3], "altern": 2, "amazon_review": 0, "amount": [0, 5], "an": [0, 1, 3, 5], "andrii": 3, "angl": 5, "ani": [0, 1, 5], "anneal": 3, "anneal_cap": 3, "annealingcallback": 3, "anonym": 0, "anoth": 0, "answer": 0, "apach": 1, "api": [1, 3, 5], "api_doc": 5, "app_nam": 5, "append": 1, "appli": [0, 3], "applic": [2, 5], "approach": 3, "approxim": 0, "april": 1, "ar": [0, 1, 2, 3, 5], "arbitrari": 3, "area": 1, "area_under_the_curv": 1, "arg": [0, 3], "argmax": 3, "argument": [0, 3, 4, 5], "arrai": [1, 3, 5], "art": 2, "articl": [0, 3], "artifici": 3, "arxiv": 3, "assign": [0, 3, 5], "assist": 2, "associ": 3, "assum": [1, 3, 5], "assumpt": 3, "asvd": 3, "asynchron": 3, "attempt": 0, "attent": 3, "attention_dim": 3, "attlayer2": 3, "attribut": 0, "auc": [1, 3], "auc_scor": 1, "auralist": 1, "author": 3, "autoencod": 3, "automat": 3, "avail": [0, 1, 3, 5], "averag": 1, "avg": 1, "awar": 3, "ax": 3, "axi": 5, "azur": [0, 3], "azure_container_url": 3, "azure_storage_account_nam": 0, "azure_storage_sas_token": 0, "azureml": 5, "azureopendatastorag": 0, "b": 3, "back": 0, "backward": 3, "bar": 3, "base": [0, 1, 5], "base_dir": 5, "base_model": 3, "baseiter": 3, "basemodel": 3, "basic": [3, 5], "batch": [3, 5], "batch_num_ng": 3, "batch_siz": [3, 5], "batch_train": 3, "beahaviros_fil": 3, "beed": 3, "been": [0, 1, 3], "befor": [0, 3, 5], "begin": 3, "behaivor": 3, "behaivors_fil": 3, "behavior": [0, 3], "behavior_fil": 3, "behaviors_fil": 3, "behaviro": 3, "behind": 3, "being": [0, 1], "below": [3, 5], "bernoulli": 3, "best": [1, 2], "beta": 3, "between": [0, 3, 5], "bh": 3, "bia": [3, 5], "bias": 3, "binar": [0, 5], "binari": [1, 3], "bind": 3, "binomi": 3, "binomial_sampl": 3, "bit": 0, "blob": 0, "block": 3, "bodi": [0, 3], "body_s": 3, "boltzmann": 3, "bool": [0, 3, 5], "boolean": [0, 3], "both": [0, 3], "bound": 0, "boundari": 3, "boundless": 0, "bring": [2, 5], "buffer": 3, "buggi": 1, "build": [2, 3], "build_feature_column": 3, "build_model": 3, "build_optim": 5, "builder": 4, "built": 3, "bv": 3, "by_threshold": 1, "by_time_stamp": 1, "by_us": 3, "byte": 0, "c": [1, 3], "cach": 0, "cal_metr": 3, "calcul": [1, 3, 5], "call": [0, 3, 5], "call_": 3, "callabl": 0, "callback": 3, "can": [0, 1, 3, 4, 5], "candid": 3, "candidate_ab_index": 3, "candidate_news_entity_index": 3, "candidate_news_index": 3, "candidate_subvert_index": 3, "candidate_title_index": 3, "candidate_vert_index": 3, "cannot": 5, "cap": 3, "captur": 5, "care": 3, "cartesian": 3, "cartesian_product": 3, "case": [0, 1], "casermodel": 3, "castel": 1, "cat00": 0, "cat01": 0, "cat02": 0, "cat03": 0, "cat04": 0, "cat05": 0, "cat06": 0, "cat07": 0, "cat08": 0, "cat09": 0, "cat10": 0, "cat11": 0, "cat12": 0, "cat13": 0, "cat14": 0, "cat15": 0, "cat16": 0, "cat17": 0, "cat18": 0, "cat19": 0, "cat20": 0, "cat21": 0, "cat22": 0, "cat23": 0, "cat24": 0, "cat25": 0, "catalog": [0, 1], "catalog_coverag": 1, "cate_col": 3, "cate_history_sequ": 3, "cate_vocab": 0, "categor": [0, 3], "categori": [0, 3], "caus": 3, "cell": 5, "chandrasekhar": 0, "check": [0, 3, 5], "check_nn_config": 3, "check_typ": 3, "checkpoint": [3, 5], "chen": [0, 3], "cheng": 3, "choic": 1, "choos": 3, "chronolog": 0, "chua": 3, "chuhan": [0, 3], "citat": [0, 1, 3], "ckpt": 3, "clamp": 3, "class": [0, 1, 3, 5], "classic": 2, "classmethod": 0, "clean": [0, 3], "clean_datafram": [0, 3], "clean_zip_fil": 0, "cleaned_text": 3, "clear": 5, "clear_memory_all_gpu": 5, "click": [0, 3], "click_news_entity_index": 3, "click_news_index": 3, "clicked_ab_index": 3, "clicked_subvert_index": 3, "clicked_title_index": 3, "clicked_vert_index": 3, "cluster": 5, "co": [3, 5], "code": [3, 5], "codebas": 3, "coeffici": 3, "col": 0, "col_feedback": 0, "col_item": [0, 1, 3], "col_item_featur": 1, "col_label": 0, "col_pr": 0, "col_predict": [1, 3], "col_rat": [0, 1, 3], "col_relev": 1, "col_sep": 3, "col_sim": 1, "col_split": 3, "col_test_batch": 3, "col_timestamp": [0, 3], "col_us": [0, 1, 3], "cold": 3, "collabor": [0, 3], "collect": 0, "cols_to_clean": 3, "cols_to_keep": 3, "column": [0, 1, 3, 5], "columnmismatcherror": 1, "columntypemismatcherror": 1, "com": [0, 1], "combin": 3, "come": 0, "command": [3, 5], "committe": 3, "common": [1, 2, 3], "commonli": 3, "commun": 0, "comp": 3, "compar": [3, 5], "compare_metr": 3, "comparison": [3, 5], "compon": 3, "compress": [0, 3], "compressed_fil": 0, "compromis": 5, "compt": 3, "comput": [1, 3, 5], "compute_affinity_matrix": 3, "compute_cooccurrence_matrix": 3, "compute_mask": 3, "compute_output_shap": 3, "compute_ranking_predict": 3, "compute_time_decai": 3, "computemask": 3, "concaten": 3, "concurr": 5, "condit": [0, 3], "condtion": 3, "confer": 3, "config": [0, 3, 5], "configur": [0, 3, 5], "connect": 3, "consid": 1, "consist": [0, 3], "consol": 5, "constant": [1, 3], "constitut": 0, "construct": 3, "constructor": 3, "contain": [0, 1, 2, 3, 5], "container_nam": 0, "content": [0, 3], "context": [0, 5], "continu": 3, "contrast": [3, 5], "control": 3, "conv_dim": 3, "conveni": 3, "convent": 0, "converg": 3, "convert": [0, 3], "convolut": 3, "coo": 3, "coo_matrix": [0, 3], "cooccurr": [3, 5], "copi": 0, "core": [3, 5], "core_num": 0, "cornac_util": 3, "coronaviru": 0, "correct": [1, 3, 5], "correctli": 3, "correl": 3, "correspond": [0, 1, 3, 5], "cosin": [3, 5], "cosine_similar": 5, "could": 3, "count": [0, 1, 3, 5], "coverag": 1, "covid": 0, "covid19temp": 0, "covid_util": 0, "cpu": 5, "cpu_cor": 5, "cpu_cores_per_replica": 5, "creat": [0, 3, 5], "create_combined_dataset": 3, "create_hparam": 3, "create_norm_adj_mat": 3, "creation": 3, "cross": 3, "cross_entropy_loss_": 1, "crossed_feat_dim": 3, "cs276": 1, "csr": 3, "csr_matrix": 3, "csv": [0, 3], "cuda": 5, "cudnn": 5, "cumul": 1, "current": [3, 5], "current_tim": 3, "curv": 1, "custom": [1, 2, 5], "customerid": 1, "cut": 0, "d": [0, 1], "dac": 0, "dai": [0, 3], "danyang": 0, "data": [0, 1, 2, 5], "data_dict": 3, "data_max": 5, "data_min": 5, "data_path": [0, 3], "data_pipelin": 3, "data_preprocess": 0, "databrick": [0, 5], "datafil": [0, 3], "datafram": [1, 3, 5], "datamodel": 3, "dataset": [2, 3, 5], "date": 5, "dawen": 3, "dbf": 0, "dbfs_datapath": 0, "dbutil": 0, "dcg": [1, 3], "dcg_score": 3, "de": [0, 3], "debug": 3, "decai": [3, 5], "decay_column": 3, "decim": 3, "decod": 3, "decomposit": 3, "decor": 0, "deep": 2, "deep_column": 3, "deeprec_util": 3, "def": 0, "default": [0, 1, 3], "default_head": 0, "default_item_col": 0, "default_rating_col": 0, "default_timestamp_col": 0, "default_user_col": 0, "defin": [0, 1, 3, 5], "definit": 1, "delet": 0, "demo": 3, "demonstr": 3, "deng": 3, "dens": 1, "densiti": 1, "depend": 0, "deploy_configur": 5, "describ": 0, "descript": [0, 3], "dest_path": 0, "destin": 0, "detail": [0, 1, 2, 3], "determin": [1, 3], "develop": 2, "devic": 5, "device_nam": 5, "devid": 3, "df": [0, 3, 5], "df_1": 0, "df_2": 0, "df_clean": 3, "df_featur": 0, "df_full": 0, "df_list": 3, "df_neg_sampl": 0, "df_out": 0, "dict": [0, 3, 4, 5], "dictionari": [0, 3, 4, 5], "differ": [0, 1, 2, 3, 5], "differen": 3, "dim": 3, "dim1": 3, "dim2": 3, "dim3": 3, "dimens": [0, 3], "diment": [0, 3], "dir_nam": 3, "directli": [1, 4], "directori": [0, 3, 5], "discfun_typ": 1, "discount": 1, "discounted_cumulative_gain": 1, "discover": 5, "discoveri": [1, 3], "discret": 3, "diseas": 0, "displai": 0, "display_epoch": 3, "display_metr": 3, "dissimilar": 1, "distanc": 3, "distinct": 3, "distribut": [0, 1, 3], "distributional_coverag": 1, "diverg": 3, "divers": 1, "divid": 0, "dkn_item2item": 3, "dkn_item2item_iter": 3, "dkn_iter": 3, "dknitem2item": 3, "dknitem2itemtextiter": 3, "dkntextiter": 3, "dnn_batch_norm": 3, "dnn_dropout": 3, "dnn_hidden_unit": 3, "dnn_optim": 3, "do": [0, 1, 3], "doc": [0, 1], "document": [1, 3], "doe": [0, 1, 3, 5], "doesn": 5, "doi": 0, "domain": [0, 3], "don": [0, 3], "dot": 5, "down": 3, "download": 3, "download_and_extract": 0, "download_and_extract_glov": 0, "download_criteo": 0, "download_deeprec_resourc": 3, "download_mind": 0, "download_movielen": 0, "download_path": 0, "download_util": 0, "downstream": 3, "draw": 5, "driver": 5, "drop": 0, "drop_decod": 3, "drop_encod": 3, "dropout": 3, "dropout_r": 3, "dst_dir": 0, "dtype": 0, "due": 5, "duplic": [0, 1, 3], "dure": 3, "dx": 0, "e": [0, 1, 3, 5], "e1": 3, "e2": 3, "e3": 3, "each": [0, 1, 2, 3, 5], "earli": 3, "earlier": 0, "earliest": 0, "easi": 0, "ecir": 1, "edu": [1, 3], "effect": 3, "effici": 0, "eid": 0, "either": [0, 1, 3], "elaps": [3, 5], "elbo": 3, "element": [0, 3], "eleventh": 3, "els": [3, 5], "embed": [0, 3], "embedding_dim": 3, "emnlp": 3, "empir": 3, "empti": [3, 5], "emptyfileexcept": 3, "en": [0, 1, 3], "enabl": 0, "encod": 3, "encoderlay": 3, "encount": [1, 3], "end": [0, 3], "energi": 3, "enforc": 3, "english": 0, "enough": 3, "ensur": 5, "enthusiast": 2, "entir": [0, 1, 3], "entiti": [0, 3], "entityid": 0, "entri": 0, "environ": 2, "epoch": [0, 3, 5], "epsilon": 3, "eq": 1, "equal": [1, 3, 5], "equival": 1, "eras": 0, "error": [1, 3], "essenti": 3, "estim": [3, 5], "et": [1, 3], "etc": [0, 3], "eugen": 1, "eugeneyan": 1, "eval": 3, "eval_batch_data": 3, "eval_df": 5, "eval_epoch": 3, "eval_fn": 5, "eval_input_fn": 5, "eval_kwarg": 5, "eval_metr": 3, "eval_out": 3, "evalu": [2, 3, 5], "evaluate_valid": 3, "evaluation_log_hook": 5, "evaluationnew": 1, "even": 1, "event": [0, 1, 3], "eventu": 0, "everi": [0, 1, 3], "every_n_it": 5, "exampl": [0, 2, 3, 5], "exce": 0, "except": [0, 1, 3, 5], "exclud": [0, 3], "execut": [3, 5], "execute_notebook": 5, "exist": [0, 1, 3], "exp": 1, "exp_var": 1, "expect": [0, 2, 3], "expected_byt": 0, "expens": 0, "experi": 2, "explain": [0, 1, 5], "explan": 1, "explicit": [0, 3], "explicitli": 5, "exponenti": 5, "exponential_decai": 5, "export": [3, 5], "export_model": 5, "express": 0, "extend": 3, "extern": 3, "extra": 0, "extract": [0, 3, 5], "extract_criteo": 0, "extract_mind": 0, "extract_movielen": 0, "extractal": 0, "extrem": 2, "f": [0, 3], "f1": 3, "f_0": 3, "f_config": 3, "f_k": 3, "factor": [0, 1, 2, 3, 5], "fail": 3, "faji": 3, "fake": 0, "fals": [0, 3, 5], "famili": 0, "fangzhao": [0, 3], "fast": [0, 3], "fastai_util": 3, "faster": 3, "favour": 5, "feat_name_typ": 5, "featur": [0, 1, 3, 5], "feature_column": [3, 5], "feature_count": 0, "feature_extract": 3, "fed": [3, 4, 5], "feed": 3, "feed_dict": 3, "feedback": [0, 1, 3], "feedforward": 3, "few": 1, "fewer": 1, "ffm": 3, "ffmtextiter": 3, "ffn": 3, "field": [0, 3], "field1": 0, "field2": 0, "field3": 0, "field4": 0, "field_count": 0, "field_feature_index": 0, "field_feature_valu": 0, "field_index": 0, "fight": 0, "file": [0, 3, 5], "file_path": 3, "filenam": [0, 3], "filenotsortedexcept": 3, "filepath": 0, "filestor": 0, "fill": 3, "filter": [0, 1, 3], "filter_bi": 0, "filter_by_col": 0, "filter_by_df": 0, "filter_k_cor": 0, "filter_num": 3, "first": [0, 3, 5], "fit": [0, 3], "fit_transform": [0, 3], "five": 2, "fix": [0, 3], "flag": [0, 3, 5], "flat": 3, "flat_config": 3, "float": [0, 1, 3, 5], "float32": 3, "floattyp": 0, "folder": [0, 3], "follow": [0, 1, 3], "forder": 0, "forev": 5, "form": [0, 3, 4], "format": [0, 1, 2, 3, 5], "former": 0, "formul": 1, "formula": [1, 5], "forward": 3, "found": [0, 1, 3], "foundat": 2, "fraction": [0, 5], "frame": [0, 1], "free": [0, 3], "free_energi": 3, "free_memori": 5, "frequenc": [3, 5], "frequent": [0, 1, 3], "friend": 1, "from": [0, 1, 3, 4, 5], "frozenset": 3, "ftrl": [3, 5], "full": [0, 3], "full_text": 3, "func": [0, 5], "function": [0, 1, 3, 5], "funk": 0, "further": 3, "g": [0, 1, 3, 5], "gain": 1, "gamma": 3, "gao": 0, "gate": 3, "gb": 5, "gcn": 3, "ge": 3, "gen_affinity_matrix": 0, "gen_feed_dict": 3, "gen_index": 0, "gen_infer_feed_dict": 3, "gener": [0, 3, 4], "general_util": 5, "generate_embed": 0, "generate_graph": 3, "generate_param_grid": 4, "genr": 0, "genres_col": 0, "geoffrei": 3, "get": [0, 1, 3, 5], "get_config": 3, "get_cuda_vers": 5, "get_cudnn_vers": 5, "get_data": 3, "get_df": 0, "get_gpu_info": 5, "get_item_based_topk": 3, "get_log": 5, "get_mind_data_set": 3, "get_norm_adj_mat": 3, "get_number_gpu": 5, "get_number_processor": 5, "get_optimal_beta": 3, "get_param": 0, "get_physical_memori": 5, "get_popularity_based_topk": 3, "get_public_domain_text": 0, "get_review_data": 0, "get_sess": 0, "get_spark_df": 0, "get_spark_schema": 0, "get_stop_word": 3, "get_token": 3, "get_top_k_item": 1, "get_top_k_recommend": 3, "get_top_k_scored_item": 5, "get_topk_most_similar_us": 3, "get_train_input": 0, "get_user_histori": 0, "get_valid_input": 0, "get_words_and_ent": 0, "getter": 5, "gibb": 3, "gibbs_protocol": 3, "gibbs_sampl": 3, "given": [0, 3, 5], "global": [0, 3, 5], "glove": 0, "gmf": 3, "gmf_dir": 3, "go": 3, "good": 1, "gpu": 3, "gpu_util": 5, "gradient": 3, "gram": 3, "graph": [3, 5], "graphrec": 3, "greater": 5, "grid": 4, "ground": [1, 3, 5], "group": [0, 1, 3], "group_auc": 3, "group_kei": 3, "group_label": 3, "grouplen": 0, "gru_unit": 3, "guidelin": 5, "gunawardana": 1, "guo": 3, "gz": 0, "h": 3, "h_": 3, "h_k": 3, "ha": [0, 1, 3, 5], "half_lif": 5, "halv": 0, "handbook": 1, "handl": 5, "handout": 1, "hanwang": 3, "happen": 3, "harper": 0, "has_column": 0, "has_same_base_dtyp": 0, "hash": 0, "hashabl": 0, "have": [0, 1, 3, 5], "he": [0, 3], "head": [1, 3], "head_dim": 3, "head_num": 3, "header": 0, "height": 5, "helper": [0, 3, 5], "henc": 1, "here": [1, 3], "hidden": [0, 3], "hidden_unit": 3, "hide": 3, "hide_fastai_progress_bar": 3, "high": [1, 3, 5], "highest": 3, "highli": 5, "hinton": 3, "his_siz": 3, "histor": [0, 1], "histori": [0, 3], "historical_item_novelti": 1, "hit": [1, 3], "hit_scor": 3, "hold": 3, "homogen": 0, "hook": 5, "hot": 3, "how": 1, "howev": 5, "hparam": 3, "hparams_dict": 3, "hsieh": 3, "html": [0, 1, 3], "http": [0, 1, 3, 5], "hu": 3, "huang": 3, "hung": 0, "hyper": 3, "hyperparamet": [2, 3], "i": [0, 1, 2, 3, 5], "icdm": 3, "id": [0, 1, 3], "id_col": 3, "id_split": 3, "idea": 3, "ideal": 5, "ieee": 3, "ignor": [0, 3, 5], "iid": 3, "iid_map": 3, "ij": 3, "ijcai": 3, "ijcnlp": 3, "iloc": 0, "implement": [0, 1, 2, 3], "implicit": [1, 3], "implicitcf": 3, "import": [0, 3, 5], "impos": 3, "impres": 3, "impress": [0, 3], "impression_id": 3, "improv": 3, "includ": [0, 1, 2, 3], "inclus": [3, 5], "inclusion_index": 5, "inconsist": 1, "increas": 3, "increment": 3, "indec": 3, "independ": 3, "index": [0, 1, 3, 5], "indic": [0, 1, 3, 5], "inf": 1, "infecti": 0, "infer": [3, 5], "infer_embed": 3, "infil": 3, "infile_nam": 3, "info": [0, 1, 3], "inform": [0, 3, 5], "init": 3, "init_behavior": 3, "init_gpu": 3, "init_metr": 3, "init_new": 3, "init_paramet": 3, "init_stdv": 3, "init_training_sess": 3, "initi": [1, 3, 5], "initialis": 3, "initil": 3, "initiliaz": 3, "inplac": 0, "input": [0, 1, 3, 5], "input_fil": 3, "input_mask": 3, "input_notebook": 5, "input_s": 3, "input_seq": 3, "input_shap": 3, "insight": 0, "inspir": 0, "instal": [2, 3, 5], "instanc": [0, 3, 5], "instanti": 3, "instead": [0, 1, 3, 5], "institut": 0, "int": [0, 1, 3, 5], "int00": 0, "int01": 0, "int02": 0, "int03": 0, "int04": 0, "int05": 0, "int06": 0, "int07": 0, "int08": 0, "int09": 0, "int10": 0, "int11": 0, "int12": 0, "int32": [0, 3], "integ": [0, 3], "integertyp": 0, "intellig": [0, 3], "intend": 0, "interact": [0, 1, 3], "interest": [0, 3], "intermedi": [0, 3], "intermediate_dim": 3, "intern": 3, "interpret": 5, "interv": [3, 5], "introduc": 1, "invalid": 0, "invers": [3, 5], "invert": 5, "invert_dictionari": 5, "invok": 3, "involv": 1, "io": [0, 3], "ioerror": 3, "ipython": 5, "is_databrick": 5, "is_history_expand": 0, "is_jupyt": 5, "is_list": 3, "istarget": 3, "item": [0, 1, 5], "item1": 3, "item2": 3, "item_c": 3, "item_cate_history_sequ": 3, "item_col": [0, 3], "item_cooccurrence_count": 1, "item_df": 0, "item_dim": 3, "item_embedding_dim": 3, "item_feat_col": 3, "item_feat_shap": 3, "item_featur": 3, "item_feature_df": 1, "item_feature_vector": 1, "item_fil": 3, "item_hash": 3, "item_history_sequ": 3, "item_id": 3, "item_input": 3, "item_novelti": 1, "item_num": 3, "item_path": 0, "item_pool": 3, "item_sim_measur": 1, "item_vocab": 0, "itemcol": 3, "itemid": [0, 1, 3, 5], "itemnum": 3, "items_list": 0, "iter": [0, 5], "iterator_cr": 3, "iterator_creator_test": 3, "iterator_creator_train": 3, "j": [0, 1, 3, 5], "jaccard": [3, 5], "jambor": 1, "jar": 5, "java": 0, "jianfeng": 0, "jianqiang": 3, "jianxun": 0, "jiun": 0, "join": 1, "joint": 3, "journal": 3, "json": 0, "julian": 3, "jupyt": [2, 5], "just": [0, 1, 3], "k": [0, 1, 3, 5], "k8s_util": 5, "kang": 3, "kdd": 3, "keep": [0, 3], "keep_first_n_col": 0, "keep_genre_col": 0, "keep_prob": 3, "keep_title_col": 0, "kei": [2, 3, 5], "kept": 3, "kernel": 5, "kernel_nam": 5, "keyword": [3, 4, 5], "kind": 0, "kinnei": 0, "knowledg": 3, "known": 1, "konstan": 0, "koren": 3, "kuan": 3, "kun": 3, "kwarg": [0, 3, 5], "l": [0, 3], "l2": 3, "l2_reg": 3, "lab": 0, "label": [0, 1, 3, 5], "label_col": 3, "languag": [0, 3], "larg": [0, 3], "larger": 3, "last": [3, 5], "latent": 3, "latent_dim": 3, "later": 3, "latest": 0, "latter": [0, 3], "layer": 3, "layer_s": 3, "layernorm": 3, "lead": [0, 1], "learn": [0, 2, 3, 5], "learnabl": 3, "learner": 3, "learning_r": 3, "learningself": 0, "least": [0, 2, 3], "leav": [1, 3], "legend": 5, "legend_loc": 5, "length": 3, "leskovec": 0, "less": [0, 1, 3, 5], "let": 3, "level": [0, 3, 5], "lexicograph": [3, 5], "lexicographers_mutual_inform": 5, "li": 3, "lian": [0, 3], "liang": 3, "liao": 3, "libffm": 0, "libffmconvert": 0, "librari": [2, 5], "lift": [3, 5], "lightfm_util": 3, "lightgbm_util": 3, "like": [0, 3, 5], "likelihood": 3, "liken": 0, "limit": 1, "line": [3, 5], "line_graph": 5, "linear": 3, "linear_optim": 3, "link": [0, 1, 3], "linux": 2, "liqiang": 3, "list": [0, 1, 3, 4, 5], "literatur": 0, "littl": 0, "liu": [0, 3], "lizi": 3, "lo": 0, "load": [0, 2, 3, 5], "load_data": 3, "load_data_from_fil": 3, "load_dict": 3, "load_glove_matrix": 0, "load_impression_from_fil": 3, "load_infer_data_from_fil": 3, "load_item_df": 0, "load_model": 3, "load_news_from_fil": 3, "load_pandas_df": 0, "load_spark_df": 0, "load_user_from_fil": 3, "load_yaml": 3, "loader": 3, "local": [0, 5], "local_cache_path": 0, "locat": [0, 5], "log": [0, 3, 5], "log2": 1, "log_every_n_it": 3, "log_loss": 1, "log_loss_scor": 1, "log_retri": 0, "logarithm": 1, "loge": 1, "logger": 5, "logic": 3, "logit": 3, "logloss": [1, 3], "london": 3, "long": [1, 3], "longtyp": 0, "look": [0, 3], "loop": 3, "loss": [3, 5], "loss_funct": 3, "loss_functions_for_classif": 1, "losshistori": 3, "low": [1, 3, 5], "lower": 3, "lr": 5, "lru_cach": 0, "lru_cache_df": 0, "lstm": 3, "lsturmodel": 3, "lyst": 3, "m": [0, 3], "machin": [0, 2, 3], "made": 0, "mae": 1, "mahmoodi": 3, "mai": [0, 1], "main": [0, 3], "maintain": 0, "make": [0, 3], "mani": 0, "manl": 3, "manner": 0, "map": [0, 1, 3], "map_at_k": 1, "map_back_spars": 0, "mapper": 3, "march": 0, "markdown": 5, "mask": 3, "mask_right": 3, "master": 5, "match": 3, "matplotlib": [3, 5], "matric": [0, 3], "matrix": [0, 3, 5], "maven": 5, "max": [0, 1, 3, 5], "max_qp_replica": 5, "max_sent": 0, "max_val": 5, "maximum": [1, 3, 5], "maxlen": 3, "maxsiz": 0, "mayb": 0, "maybe_download": 0, "mb": 5, "mcaulei": [0, 3], "mean": [1, 3, 5], "mean_mrr": 3, "meanaverageprecis": 1, "meaning": 1, "meant": 1, "measur": [1, 5], "mechan": 3, "meet": 3, "memoiz": 0, "memori": [3, 5], "meng": 3, "mere": 3, "merg": 3, "merge_ranking_true_pr": 1, "merge_rating_true_pr": 1, "merril": 0, "messag": 1, "meta": 0, "meta_fil": 0, "metadata": [0, 3, 5], "metadata_filenam": 0, "method": [0, 1, 3, 5], "metric": [0, 1, 2, 3, 5], "metricslogg": 5, "microsoft": [0, 3], "might": 1, "million": 0, "mimic": 0, "min": [1, 5], "min_df": 3, "min_rat": 0, "min_rating_filt": 0, "min_rating_filter_panda": 0, "min_rating_filter_spark": 0, "min_seq_length": 3, "mind": 3, "mind_all_iter": 3, "mind_iter": 3, "mindalliter": 3, "minditer": 3, "mine": 3, "ming": 0, "mingxiao": 3, "mini": 3, "minibatch": 3, "minibatch_s": 3, "minim": 3, "minimum": [0, 3, 5], "minmaxscal": 5, "minu": 1, "mismatch": 1, "miss": [1, 3], "missingfieldsexcept": 3, "missinguserexcept": 3, "ml": 0, "mllib": 1, "mlp": 3, "mlp_dir": 3, "mnih": 3, "mobil": 0, "mock": 0, "mock100": 0, "mock_data_format": 0, "mockmovielensschema": 0, "mode": 3, "model": [1, 2, 4, 5], "model_checkpoint": 3, "model_dir": [3, 5], "model_path": 3, "model_perf_plot": 3, "model_typ": 3, "modif": [1, 5], "modifi": [3, 5], "momentum": 5, "moonei": 0, "more": [0, 1, 3, 5], "most": [0, 3, 5], "mostli": 0, "movi": [0, 3], "movie_col": 0, "movielen": 3, "mrr": 3, "mrr_score": 3, "mult_va": 3, "multi": [0, 3], "multifacet": 3, "multihead": 3, "multiheadattent": 3, "multinomial_distribut": 3, "multinomial_sampl": 3, "multinomial_va": 3, "multipl": 3, "multipli": 5, "multiprocess": 3, "multirnncel": 3, "music": 1, "must": [0, 3], "mutual": [3, 5], "mutual_inform": 5, "my_funct": 0, "n": [0, 3], "n_cores_per_nod": 5, "n_epoch": 3, "n_factor": 3, "n_hidden": 3, "n_item": 3, "n_neg": 3, "n_neg_test": 3, "n_node": 5, "n_sampl": 3, "n_user": 3, "n_visibl": 3, "n_worker": 3, "name": [0, 1, 3, 5], "namlmodel": 3, "nan": 0, "natur": [0, 3], "ncf_singlenod": 3, "ncfdataset": 3, "ndarrai": [0, 1, 3, 5], "ndcg": [1, 3], "ndcg_at_k": 1, "ndcg_per_epoch": 3, "ndcg_score": 3, "ndcgat": 1, "necessari": [0, 3], "need": [0, 1, 3, 5], "neg": [0, 3], "neg_logit": 3, "neg_valu": 0, "negaiv": 3, "negative_feedback_sampl": 0, "negativesampl": 3, "negtiv": 3, "neighborhood": 3, "network": 3, "neumf": 3, "neumf_dir": 3, "neural": [0, 3], "never": 3, "new": [0, 3], "new_col_nam": 3, "new_max": 5, "new_min": 5, "newli": 5, "news_abstract_index": 3, "news_ent": 0, "news_entity_index": 3, "news_fil": 3, "news_filenam": 3, "news_title_index": 3, "news_word": 0, "news_word_index": 3, "newsampl": 3, "newsid": 3, "newsrec_util": 3, "next": 3, "nextitnet_iter": 3, "nextitnetiter": 3, "nextitnetmodel": 3, "ngram_rang": 3, "nid2index": 3, "nie": 3, "nitem": 0, "nn_batch_gener": 3, "nnkkmto": 3, "no_epoch": 3, "no_partit": 0, "no_thread": 3, "node": [3, 5], "nodes_to_replica": 5, "non": 0, "none": [0, 1, 3, 5], "nonzero": 3, "normal": [0, 1, 3, 5], "note": [1, 3, 5], "notebook": [2, 3], "notebook_memory_manag": 5, "notebook_util": 5, "noth": 0, "novel": 1, "novelti": 1, "np": 3, "npamodel": 3, "npratio": [0, 3], "npration": 0, "nrmsmodel": 3, "nu": 3, "num": 3, "num_bit": 3, "num_block": 3, "num_epoch": 5, "num_head": 3, "num_lay": 3, "num_minibatch": 3, "num_neg_test": 3, "num_ng": 3, "num_replica": 5, "num_thread": 3, "number": [0, 1, 3, 5], "nume_col": 3, "numencod": 3, "numer": [0, 1, 3, 5], "numpi": [0, 1, 3, 5], "numpy_input_fn": 5, "numpy_stratified_split": 0, "nuser": 0, "nv": 3, "o": 0, "obj": 3, "object": [0, 2, 3, 5], "observ": [1, 3], "obtain": [0, 3], "occur": 3, "occurr": [3, 5], "offlin": 2, "old": 5, "omit": 5, "on_batch_end": 3, "on_epoch_end": 3, "on_train_begin": 3, "onc": 3, "one": [0, 1, 3], "ones": 3, "onli": [0, 1, 3], "onlin": [0, 3], "onto": 0, "op": 3, "open": 0, "oper": [0, 1, 3], "operation": 2, "operation_tim": 3, "oppos": 5, "opposit": 0, "optim": [0, 2, 3, 5], "option": [0, 1, 3, 5], "order": [3, 5], "ordin": 0, "org": [0, 1, 3, 5], "origin": [0, 3, 5], "original_dim": 3, "other": 3, "otherwis": [0, 3, 5], "ouput": 3, "our": 2, "out": [1, 3], "outfile_nam": 3, "output": [0, 1, 2, 3, 5], "output_notebook": 5, "output_s": 3, "over": [0, 3, 5], "overal": 5, "overlap": 5, "overrid": [3, 5], "overwrit": 3, "overwrite_test_file_ful": 3, "overwritemask": 3, "own": 2, "p": [0, 1, 3], "packag": 5, "pad": 3, "page": [0, 3], "pair": [0, 1, 3, 5], "panda": [1, 3, 5], "pandas_df_util": 0, "pandas_input_fn": 5, "pandas_input_fn_for_saved_model": 5, "pandas_object": 0, "pandashash": 0, "pandem": 0, "pandera": 0, "paper": [0, 3], "parallel": 3, "param": [3, 4], "param1": 4, "param2": 4, "param_dict": 4, "paramet": [0, 1, 3, 5], "parameter_sweep": 4, "pars": 3, "parse_fil": 3, "parse_test_param": 3, "parse_train_param": 3, "parser_one_lin": 3, "part": [0, 3], "particular": [0, 1], "partit": 0, "partner": 0, "pass": [0, 3, 5], "path": [0, 3, 5], "path_emb": 0, "pd": [0, 5], "pdf": [1, 3], "peopl": 0, "per": [0, 1, 3, 5], "percentag": [0, 3], "perfect": 5, "perform": 3, "period": 0, "person": [0, 3], "personailz": 3, "personalizedattentivepool": 3, "phase": 3, "phi": 3, "phi_h": 3, "phi_v": 3, "phv": 3, "physic": 5, "pick": 1, "pickl": 3, "pip": [2, 3], "pipelin": 3, "place": 3, "placehold": 3, "plaintext": 0, "pleas": [0, 3], "pleasant": 1, "plot": 3, "plot_siz": 5, "po": 3, "point": [0, 3], "pointwisefeedforward": 3, "popul": 3, "popular": [1, 3, 5], "portion": 0, "pos_logit": 3, "pos_valu": 0, "posit": [0, 1, 3], "possibl": [0, 1, 3], "possible_r": 3, "power": 3, "pp": [1, 3], "pr": 3, "practic": 2, "pre": 3, "pre_run_cel": 5, "prec": 3, "precis": 1, "precision_at_k": 1, "precisionat": 1, "pred": 3, "predcol": 3, "prededict": 3, "predict": [0, 1, 3, 5], "predict_rank": 3, "prediction_algorithm": 3, "prediction_col": 3, "prediction_df": 5, "prefer": [0, 3], "prepar": [0, 2, 3], "prepare_all_predict": 3, "prepare_hparam": 3, "prepare_test_df": 3, "preprint": 3, "present": 0, "preserv": 0, "press": 3, "pretrain": [0, 3], "previou": [3, 5], "previous": 3, "print": 3, "print_warn": 3, "privaci": 0, "probabl": 3, "problem": 0, "proceed": 3, "process": 0, "process_split_ratio": 0, "processing_tim": 5, "processor": 5, "produc": 3, "product": [0, 2, 3], "profil": 5, "progress": 3, "project": [2, 3], "properli": [0, 5], "properti": [3, 5], "proport": [0, 1, 5], "protect": 0, "protocol": 3, "prototyp": 2, "provid": [0, 1, 2, 3, 5], "pseudo": 0, "public": [0, 3], "publish_tim": 3, "purpos": 0, "pvh": 3, "py": 3, "pyplot": 5, "python": 3, "python3": 5, "python_chrono_split": 0, "python_evalu": 1, "python_random_split": 0, "python_splitt": 0, "python_stratified_split": 0, "python_util": 5, "q": 3, "qi": [0, 3], "qiao": 0, "qkv": 3, "qps_to_replica": 5, "quercia": 1, "queri": [1, 3, 5], "query_id": 3, "queue": [3, 5], "r": [0, 1, 3], "r_precision_at_k": 1, "rais": [1, 3], "random": [0, 1, 3, 5], "randomli": 0, "rang": [1, 2, 3, 5], "rank": [1, 3], "rankingmetr": 1, "rate": [0, 1, 3, 5], "rating_col": 3, "rating_path": 0, "rating_pr": 1, "rating_tru": 1, "ratio": [0, 3], "ratio_neg_per_us": 0, "raw": [0, 1], "raw_relev": 1, "rbm_model": 3, "rbmcf": 3, "re": 3, "rea": 0, "reach": 3, "read": [0, 3, 5], "read_clickhistori": 0, "read_linked_ent": 0, "read_notebook": 5, "readabl": 0, "readi": 3, "readthedoc": [0, 3], "real": 0, "reason": 0, "rec": 3, "recal": 1, "recall_at_k": 1, "recallat": 1, "receiv": 5, "receiver_operating_characterist": 1, "recent": 0, "reco_df": 1, "recommend": [1, 4, 5], "recommend_k_item": 3, "recommend_top_k_item": 3, "reconstruct": 3, "record": [0, 3, 5], "recreat": 3, "recsi": [0, 3], "rectangular": 3, "recurr": 3, "reduc": [0, 1, 3], "refer": [0, 1, 3], "referenc": [0, 1], "reflect": 1, "regardless": 1, "regex": 3, "regist": 5, "regular": 3, "reject": 3, "rel": [0, 1], "relat": 0, "releas": [0, 3], "relev": [1, 3], "relevancy_method": 1, "relu": 3, "remain": 0, "remote_resource_nam": 3, "remov": [0, 3], "remove_dupl": 0, "remove_nan": 0, "remove_seen": 3, "render": 0, "repeat": [3, 5], "repeatedli": 0, "replac": 3, "replica": 5, "replicas_to_qp": 5, "repositori": [2, 3, 5], "repr": 3, "repres": [0, 3], "represent": 3, "request": 0, "requir": [0, 1, 3, 5], "rescal": 5, "research": [0, 2], "reserv": 3, "reshap": 3, "residu": 3, "resourc": [0, 3], "respect": [0, 3], "respons": 0, "rest": 0, "restor": 3, "restrict": 3, "result": [0, 1, 3, 5], "result_queu": 3, "retri": 0, "retriev": [0, 3], "retrieve_text": 0, "return": [0, 1, 3, 4, 5], "reviews_fil": 0, "rich": 0, "right": 3, "rmse": [1, 3], "rmsprop": 5, "rnn_cell_impl": 3, "root": 1, "rough": 5, "round": 0, "row": [0, 1, 3], "rsalakhu": 3, "rsquar": 1, "rth": 3, "rtype": 5, "run": [3, 5], "run_ev": 3, "run_get_embed": 3, "ruslan": 3, "sa": [0, 3], "saddl": 3, "salakhutdinov": 3, "same": [0, 1, 3, 5], "sampl": [0, 3, 5], "sample_funct": 3, "sample_hidden_unit": 3, "sample_r": 0, "sample_visible_unit": 3, "sample_with_replac": 3, "sampler": 3, "sampling_protocol": 3, "sar_singlenod": 3, "sarsinglenod": 3, "sasrecdataset": 3, "satisfi": [0, 3], "save": [0, 3, 5], "save_checkpoints_step": [3, 5], "save_path": [0, 3], "savedmodel": 5, "scalabl": 3, "scalar": 3, "scale": [0, 3, 5], "scaled_dot_product_attent": 3, "scenario": 1, "schema": 0, "schema_model": 0, "scheme": 0, "scholarli": 0, "scibert": 3, "scikit": 3, "scipi": [0, 3, 5], "score": [1, 3, 5], "score_typ": 1, "search": [0, 3], "search_wikidata": 0, "second": [0, 3, 5], "section": 1, "secur": 0, "see": [0, 3, 5], "seed": [0, 3, 5], "seen": 3, "select": [0, 2, 3], "self": [2, 3], "selfattent": 3, "seng": 3, "sent": [0, 3], "sentenc": [0, 3], "sentent": 0, "separ": [0, 3], "seq": 3, "seq_len": 3, "seq_max_len": 3, "sequenc": 3, "sequence_length": 3, "sequential_base_model": 3, "sequential_iter": 3, "sequentialbasemodel": 3, "sequentialiter": 3, "serendip": [1, 5], "seri": [0, 3], "serial": 0, "serv": [0, 3], "servic": [0, 5], "sess": 3, "session": [0, 3, 5], "sessionrunhook": 5, "set": [0, 1, 3, 5], "set_index": 3, "setself": 0, "sett": 3, "sever": [0, 2, 3], "sg": 3, "sgd": 5, "shani": 1, "shape": [0, 3], "sharpnack": 3, "short": 3, "should": [0, 1, 3, 5], "show": 3, "show_plot": 3, "shuffl": [0, 3, 5], "shuffle_s": 3, "side": 3, "sigkdd": 3, "signatur": 5, "sim": 1, "similar": [1, 3, 5], "similar_item": 3, "similar_us": 3, "similarity_typ": 3, "simpl": 3, "simplifi": 3, "sinc": [0, 3], "singl": [0, 3, 5], "singular": 3, "situat": 3, "size": [0, 3, 5], "sklearn": 3, "sleep": 5, "sli": 3, "sli_rec": 3, "sli_recmodel": 3, "slice": 3, "small": [0, 3, 5], "so": [1, 3], "soft": 3, "solut": 0, "some": [0, 3], "sort": [1, 3, 5], "sort_top_k": [3, 5], "sourc": [0, 1, 3, 4, 5], "space": 3, "span": 0, "spark": [0, 1], "spark_chrono_split": 0, "spark_df": 0, "spark_evalu": 1, "spark_random_split": 0, "spark_splitt": 0, "spark_stratified_split": 0, "spark_timestamp_split": 0, "spark_util": 5, "sparkdiversityevalu": 1, "sparkrankingevalu": 1, "sparkratingevalu": 1, "sparksess": 0, "spars": 3, "spec": 5, "special": 3, "specif": [0, 3], "specifi": [0, 3, 5], "split": [0, 2, 3], "split_pandas_data_with_ratio": 0, "split_util": 0, "spliter": 3, "splitter": 3, "sql": [0, 1], "squar": [1, 2], "ssept": 3, "stabl": 3, "stage": 3, "stai": 3, "standard_va": 3, "standardva": 3, "stanford": 1, "star": [0, 2], "start": [3, 5], "start_or_get_spark": 5, "start_watching_memori": 5, "state": [0, 2, 3], "state_s": 3, "static": 3, "statist": 3, "statu": 3, "steer": 3, "step": [0, 3, 5], "step_limit": 3, "stop": [3, 5], "stop_max_attempt_numb": 0, "stop_watching_memori": 5, "storag": 0, "store": [0, 3, 5], "store_metadata": 5, "str": [0, 1, 3, 5], "stratif": 0, "stratifi": 0, "strictli": 3, "string": [0, 3, 4, 5], "strong": 3, "structfield": 0, "structtyp": 0, "structur": [0, 3], "studi": 2, "styler": 3, "styliz": 3, "subclass": [3, 5], "subplot": 5, "subset": [3, 5], "subtract": 0, "subvert": 3, "success": 3, "sum": 0, "sum_k": 3, "summari": [3, 5], "sun": 3, "supervis": 0, "support": [0, 2, 3, 5], "sure": [0, 3], "surpris": 1, "surprise_trainset_to_df": 3, "surprise_util": 3, "suyu": 3, "symmetr": 5, "system": [0, 1, 2, 3, 5], "s\u00e9aghdha": 1, "t": [0, 1, 3, 5], "tab": 3, "tabl": 3, "tail": 1, "take": [0, 3, 5], "taken": [3, 5], "tang": 3, "tao": [0, 3], "tar": 0, "target": [0, 3, 5], "target_qp": 5, "target_util": 5, "task": [2, 3], "tat": 3, "tempor": 0, "temporari": 0, "tensor": 3, "tensorflow": 3, "tensorshap": 3, "terabyt": 0, "term": [0, 3], "test": [0, 2, 3], "test_behaviors_fil": 3, "test_df": 3, "test_fil": [0, 3], "test_file_ful": 3, "test_idx": 3, "test_interact": 3, "test_iter": 3, "test_load": 3, "test_news_fil": 3, "test_num_ng": 0, "text": [0, 3], "text_col": 3, "textual": 0, "tf": 5, "tf2": 3, "tf_feat_col": 5, "tf_util": 5, "tfidf": 3, "tfidf_util": 3, "tfidfrecommend": 3, "tfidfvector": 3, "th": [1, 3, 5], "than": [0, 1, 3, 5], "thei": [0, 1, 3, 5], "them": 3, "therefor": 0, "thi": [0, 1, 2, 3, 5], "think": 5, "those": 3, "thought": 3, "thread": 3, "three": 3, "threshold": [1, 3, 5], "thresrat": 3, "through": 3, "tidi": 3, "tii": 0, "till": 3, "time": [0, 3, 5], "time4alstmcel": 3, "time4lstmcel": 3, "time_decay_coeffici": 3, "time_diff": 3, "time_from_first_act": 3, "time_history_sequ": 3, "time_now": 3, "time_to_now": 3, "timedecay_formula": 3, "timeout": 5, "timestamp": [0, 3], "titl": [0, 3], "title_col": 0, "title_s": 3, "tmp_path": 0, "to_vw_cmd": 3, "to_vw_fil": 3, "togeth": [0, 3], "token": [0, 3], "tokenization_method": 3, "tokenize_text": 3, "too": 3, "tool": 5, "top": [0, 1, 3, 5], "top_k": [1, 3, 5], "topic": 0, "toronto": 3, "total": [0, 1, 3, 5], "total_anneal_step": 3, "total_memori": 5, "toward": 3, "trace": 3, "track": 3, "track_model_metr": 3, "traffic": 0, "train": [0, 2, 3, 5], "train_batch_data": 3, "train_behaviors_fil": 3, "train_df": 1, "train_ent": 0, "train_fil": [0, 3], "train_file_path": 0, "train_fold": 0, "train_histori": 0, "train_input_fn": 5, "train_interact": 3, "train_iter": 3, "train_load": 3, "train_new": 0, "train_news_fil": 3, "train_num_ng": 3, "train_zip": 0, "training_epoch": 3, "trainset": 3, "tranform": 0, "transact": [0, 3], "transfer": 0, "transform": [0, 3], "treat": 3, "true": [0, 1, 3, 5], "true_df": 5, "truth": [1, 3, 5], "try": 3, "tune": 2, "tupl": [0, 1, 3, 5], "tutori": 3, "two": [0, 1, 3, 5], "type": [0, 1, 3, 4, 5], "typeerror": 3, "typic": [0, 3], "u": [0, 2, 3], "uid": 3, "uid_map": 3, "under": [1, 2], "understand": 0, "unequ": 1, "uniform": 3, "uniformli": 3, "uniqu": [0, 1, 3, 5], "unit": 3, "unpackbit": 3, "unpopular": 1, "unrat": [0, 3], "unregist": 5, "unseen": 3, "unsupervis": 0, "untar": 0, "until": [0, 3], "unusu": 1, "unzip": 0, "unzip_fil": 0, "up": [0, 3, 5], "updat": 3, "upper": 3, "url": [0, 3, 5], "us": [0, 1, 2, 3, 5], "usag": [0, 3, 5], "use_id": 3, "user": [0, 1, 3, 5], "user1": 0, "user2": 0, "user_affin": 3, "user_col": [0, 3], "user_df": 0, "user_dim": 3, "user_divers": 1, "user_embedding_dim": 3, "user_featur": 3, "user_fil": 3, "user_hash": 3, "user_history_path": 0, "user_id": [0, 3], "user_input": 3, "user_item_filter_df": 0, "user_item_pair": 0, "user_item_serendip": 1, "user_num": 3, "user_positive_item_pool": 3, "user_serendip": 1, "user_test": 3, "user_train": 3, "user_valid": 3, "user_vocab": 0, "usercol": 3, "userid": [0, 1, 3, 5], "usernum": 3, "usr": 3, "usual": 0, "util": 2, "v": [1, 3], "v_": 3, "v_k": 3, "val": 3, "val_t": 3, "val_tr": 3, "valid": [0, 3], "valid_behaviors_fil": 3, "valid_ent": 0, "valid_fil": [0, 3], "valid_file_path": 0, "valid_fold": 0, "valid_histori": 0, "valid_new": 0, "valid_news_fil": 3, "valid_num_ng": [0, 3], "valid_zip": 0, "valu": [0, 1, 3, 4, 5], "value1": 4, "value2": 4, "valueerror": 3, "var": 1, "varga": 1, "variabl": [0, 3], "varianc": [1, 3], "variat": 3, "variou": 2, "vector": [0, 1, 3, 5], "vectors_token": 3, "verbos": 3, "veri": 0, "versa": 0, "version": [1, 3, 5], "vert": 3, "vertic": 5, "via": [0, 3], "vice": 0, "viceversa": 3, "view": 3, "virus": 0, "visibl": 3, "visible_unit": 3, "vm": 5, "vocabulari": 3, "vowpal_wabbit": 3, "vv": 3, "vw": 3, "w": [0, 3], "w1": 3, "w2": 3, "w3": 3, "w_": 3, "wa": 0, "wai": 0, "wait_random_max": 0, "wait_random_min": 0, "wang": [0, 1, 3], "want": [3, 5], "warm": 0, "warmth": 0, "warn": 3, "warpsampl": 3, "wasn": 0, "watch_memori": 5, "we": [0, 1, 3, 5], "web": [1, 3], "websit": 0, "weight": [3, 5], "well": [0, 3], "when": [0, 1, 3, 5], "where": [0, 1, 3], "whether": [0, 1, 3], "which": [0, 1, 3, 5], "while": [0, 3, 5], "whole": 3, "whose": 0, "wide_column": 3, "wide_deep": 3, "wide_deep_util": 3, "width": 5, "wiki": 1, "wikidata": 0, "wikipedia": [0, 1], "winni": 0, "wise": 3, "with_metr": 3, "within": [3, 5], "without": [0, 3, 5], "wk": 3, "word": [0, 3], "word2vec_embed": 3, "word_dict": 0, "word_embedding_dim": 0, "word_token": [0, 3], "work": 0, "work_directori": 0, "worker": 3, "world": 3, "would": 5, "wq": 3, "wrap": 0, "wrapper": [0, 3], "write": 3, "write_to": 3, "wsdm": 1, "wu": [0, 3], "wv": 3, "www": [3, 5], "x": [0, 3, 5], "x_guid": 5, "x_min_max": 5, "x_name": 5, "x_train": 3, "x_val_t": 3, "x_val_tr": 3, "x_valid": 3, "xdeepfm": 2, "xdeepfmmodel": 3, "xia": 3, "xiang": 3, "xiangnan": 3, "xie": [0, 3], "xing": [0, 3], "xtr": [0, 3], "xtst": [0, 3], "xxx1": 0, "xxx2": 0, "xxx4": 0, "y": [0, 1, 3, 5], "y_col": 5, "y_min_max": 5, "y_name": 5, "y_score": 3, "y_true": 3, "yaml": 3, "yaml_fil": 3, "yan": [1, 3], "yang": 0, "year": 0, "year_col": 0, "yield": [0, 3], "yield_id": 3, "ying": 0, "yongdong": 3, "yongfeng": 3, "you": [0, 1, 3, 5], "your": [2, 5], "yu": 3, "yuan": 3, "z": [0, 3], "zero": [0, 3], "zhang": [1, 3], "zheng": 3, "zhou": [0, 3], "zip": 0, "zip_path": 0, "zip_src": 0, "zipfil": 0, "\u00f3": 1, "\u03b2": 3}, "titles": ["Dataset module", "Evaluation module", "Welcome to Recommenders", "Recommender algorithms module", "Hyperparameter tuning module", "Common utilities module"], "titleterms": {"19": 0, "a2svd": 3, "algorithm": 3, "amazon": 0, "base": 3, "caser": 3, "cell": 3, "common": 5, "cord": 0, "cornac": 3, "criteo": 0, "data": 3, "datafram": 0, "dataset": 0, "deep": 3, "deeprec": 3, "dkn": 3, "download": 0, "evalu": 1, "fastai": 3, "gener": 5, "gpu": 5, "graph": 0, "gru": 3, "hyperparamet": 4, "idf": 3, "item": 3, "iter": 3, "knowledg": 0, "kubernet": 5, "lightfm": 3, "lightgbm": 3, "lightgcn": 3, "lstur": 3, "mind": 0, "model": 3, "modul": [0, 1, 3, 4, 5], "movielen": 0, "multinomi": 3, "naml": 3, "ncf": 3, "newsrec": 3, "nextitnet": 3, "notebook": 5, "npa": 3, "nrm": 3, "other": 0, "panda": 0, "paramet": 4, "plot": 5, "process": 3, "pt": 3, "pyspark": [0, 1], "python": [0, 1, 5], "rbm": 3, "recommend": [0, 2, 3], "review": 0, "rnn": 3, "sar": 3, "sasrec": 3, "sequenti": 3, "slirec": 3, "spark": 5, "spars": 0, "splitter": 0, "sse": 3, "standard": 3, "sum": 3, "surpris": 3, "sweep": 4, "tensorflow": 5, "tf": 3, "timer": 5, "tune": 4, "util": [0, 3, 4, 5], "vae": 3, "vowpal": 3, "wabbit": 3, "welcom": 2, "wide": 3, "xdeepfm": 3}})